{"ast":null,"code":"import _slicedToArray from \"C:\\\\Project\\\\apiset2\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\apiset2\\\\frontend\\\\src\\\\Components\\\\Registration.js\";\nimport React, { useState } from 'react';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Navbar, Nav, NavDropdown, Form, FormControl } from 'react-bootstrap';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(7),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\nexport default function Registration() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        firstLoad = _React$useState2[0],\n        setLoad = _React$useState2[1];\n\n  const _React$useState3 = React.useState(new Date(\"1998-04-02T21:11:54\")),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedDate = _React$useState4[0],\n        setSelectedDate = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        username = _React$useState6[0],\n        setUserName = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        email = _React$useState8[0],\n        setEmail = _React$useState8[1];\n\n  const _React$useState9 = React.useState(\"\"),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        password = _React$useState10[0],\n        setPassword = _React$useState10[1];\n\n  const _React$useState11 = React.useState(\"\"),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        user_type = _React$useState12[0],\n        selectedOption = _React$useState12[1];\n\n  const _React$useState13 = React.useState([]),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        details = _React$useState14[0],\n        upDateDetails = _React$useState14[1];\n\n  const _React$useState15 = React.useState(\"\"),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        message = _React$useState16[0],\n        setMessage = _React$useState16[1];\n\n  const _React$useState17 = React.useState(\"\"),\n        _React$useState18 = _slicedToArray(_React$useState17, 2),\n        fk_user_id = _React$useState18[0],\n        setUserId = _React$useState18[1];\n\n  const _React$useState19 = React.useState(\"\"),\n        _React$useState20 = _slicedToArray(_React$useState19, 2),\n        user_statement = _React$useState20[0],\n        setStatement = _React$useState20[1]; //const handleDateChange = date => setSelectedDate(date.target.value);\n\n\n  const handleUserNameChange = event => setUserName(event.target.value);\n\n  const handlEmailChange = event => setEmail(event.target.value);\n\n  const handlePasswordChange = event => setPassword(event.target.value);\n\n  const onChangeValue = event => selectedOption(event.target.value);\n\n  const onStatementChange = event => setStatement(event.target.value);\n  /*onValueChange(event) {\r\n      this.setState({\r\n        selectedOption: event.target.value\r\n      });\r\n    }\r\n    */\n\n\n  async function user(userInput) {\n    const response = await fetch(\"/api/user/insert\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(userInput) // body data type must match \"Content-Type\" header\n\n    });\n    let body = await response.json();\n    console.log(body.JSON);\n    console.log(body.id);\n    setMessage(body);\n    let fk_user_id = body.pk_user_id;\n    setUserId(fk_user_id);\n  }\n\n  async function details1(detailsInput) {\n    const response = await fetch(\"/api/details/insert\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(detailsInput) // body data type must match \"Content-Type\" header\n\n    });\n    let body = await response.json();\n    upDateDetails(body);\n    console.log(body.pk_details_id); //setMessage(body.pk_details_id ? body.pk_details_id : \"Data update failed\");\n  }\n\n  const handleSubmit = variables => {\n    //{if (window.confirm('Ok to enter these details?')) this.onCancel(\"Return\")}\n    //const toInput = { userName, email, password, dob: selectedDate };\n    const userInput = {\n      username,\n      email,\n      password,\n      user_type,\n      reg_approval: \"pending\",\n      reg_date: \"2021-01-22\"\n    };\n    user(userInput); //setUserId(\"26\");\n    //let fk_user_id = 26 ;\n\n    const detailsInput = {\n      fk_user_id,\n      user_statement\n    };\n    details1(detailsInput);\n    setUserName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    selectedOption(\"\");\n    setStatement(\"\");\n    setMessage(details.fk_user_id);\n  };\n\n  if (firstLoad) {\n    // sampleFunc();\n    setLoad(false);\n    setMessage(\"Please hit save to register\");\n  }\n\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(GroupIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Register as Donor or Charity\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    value: username,\n    label: \"UserName\",\n    userName: \"userName\",\n    autoComplete: \"username\",\n    onChange: handleUserNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"email\",\n    name: \"email\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: email,\n    id: \"email\",\n    label: \"Email\",\n    onChange: handlEmailChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"user_statement\",\n    name: \"user_statement\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: user_statement,\n    id: \"user_statement\",\n    label: \"User Statement\",\n    onChange: onStatementChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"password\",\n    value: password,\n    label: \"Password\",\n    name: \"password\",\n    autoComplete: \"password\",\n    onChange: handlePasswordChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onChange: onChangeValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"1\",\n    id: \"user_type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), \" Donor \\u2003\", React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"2\",\n    id: \"user_type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), \" Charity\"))), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    preventDefault: true,\n    className: classes.submit,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"View Employee Records\")))), React.createElement(Typography, {\n    style: {\n      margin: 7\n    },\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Status: \", message)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Hi ho\"));\n}\n/*\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date of birth\"\r\n                type=\"date\"\r\n                defaultValue=\"1998-04-02\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                onChange={handleDateChange}\r\n              />\r\n            </Grid>\r\n*/","map":{"version":3,"sources":["C:/Project/apiset2/frontend/src/Components/Registration.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","Link","Grid","GroupIcon","Typography","makeStyles","Container","Navbar","Nav","NavDropdown","Form","FormControl","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","textField","marginLeft","marginRight","Registration","classes","firstLoad","setLoad","Date","selectedDate","setSelectedDate","username","setUserName","email","setEmail","password","setPassword","user_type","selectedOption","details","upDateDetails","message","setMessage","fk_user_id","setUserId","user_statement","setStatement","handleUserNameChange","event","target","value","handlEmailChange","handlePasswordChange","onChangeValue","onStatementChange","user","userInput","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","json","console","log","id","pk_user_id","details1","detailsInput","pk_details_id","handleSubmit","variables","reg_approval","reg_date"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl} from 'react-bootstrap'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(7),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport default function Registration() {\r\n    const classes = useStyles();\r\n    const [firstLoad, setLoad] = React.useState(true);\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(\r\n      new Date(\"1998-04-02T21:11:54\")\r\n    );\r\n    const [username, setUserName] = React.useState(\"\");\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [user_type, selectedOption] = React.useState(\"\");\r\n    const [details, upDateDetails] = React.useState([]);\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const [fk_user_id, setUserId] = React.useState(\"\");\r\n    const [user_statement, setStatement] = React.useState(\"\");\r\n    \r\n    \r\n\r\n    //const handleDateChange = date => setSelectedDate(date.target.value);\r\n    const handleUserNameChange = event => setUserName(event.target.value);\r\n    const handlEmailChange = event => setEmail(event.target.value);\r\n    const handlePasswordChange = event => setPassword(event.target.value);\r\n    const onChangeValue = event => selectedOption(event.target.value);\r\n    const onStatementChange = event => setStatement(event.target.value);\r\n    /*onValueChange(event) {\r\n        this.setState({\r\n          selectedOption: event.target.value\r\n        });\r\n      }\r\n      */\r\n\r\n      \r\n\r\n\r\n    async function user(userInput) {\r\n        const response = await fetch(\"/api/user/insert\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n            body: JSON.stringify(userInput) // body data type must match \"Content-Type\" header\r\n        });\r\n        let body = await response.json();\r\n        console.log(body.JSON);\r\n        console.log(body.id);\r\n        setMessage(body);\r\n        let fk_user_id = body.pk_user_id;\r\n        setUserId(fk_user_id);\r\n    }\r\n\r\n    async function details1(detailsInput) {\r\n        const response = await fetch(\"/api/details/insert\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n            body: JSON.stringify(detailsInput) // body data type must match \"Content-Type\" header\r\n        });\r\n        let body = await response.json();\r\n        upDateDetails(body);\r\n        console.log(body.pk_details_id);\r\n        //setMessage(body.pk_details_id ? body.pk_details_id : \"Data update failed\");\r\n    }\r\n\r\n    const handleSubmit = variables => {\r\n        //{if (window.confirm('Ok to enter these details?')) this.onCancel(\"Return\")}\r\n        //const toInput = { userName, email, password, dob: selectedDate };\r\n        const userInput = { username, email, password, user_type, reg_approval: \"pending\", reg_date: \"2021-01-22\" };\r\n        user(userInput);\r\n        //setUserId(\"26\");\r\n        //let fk_user_id = 26 ;\r\n        const detailsInput = { fk_user_id , user_statement };\r\n        details1(detailsInput);\r\n        setUserName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        selectedOption(\"\");\r\n        setStatement(\"\");\r\n        setMessage(details.fk_user_id);\r\n    };\r\n\r\n    if (firstLoad) {\r\n        // sampleFunc();\r\n        setLoad(false);\r\n        setMessage(\"Please hit save to register\");\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <GroupIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register as Donor or Charity\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                value={username}\r\n                                label=\"UserName\"\r\n                                userName=\"userName\"\r\n                                autoComplete=\"username\"\r\n                                onChange={handleUserNameChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"email\"\r\n                                name=\"email\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                value={email}\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                onChange={handlEmailChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"user_statement\"\r\n                                name=\"user_statement\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                value={user_statement}\r\n                                id=\"user_statement\"\r\n                                label=\"User Statement\"\r\n                                onChange={onStatementChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                value={password}\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                autoComplete=\"password\"\r\n                                onChange={handlePasswordChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid justify=\"center\"> \r\n                            <div onChange={onChangeValue}>\r\n                                <input type=\"radio\" value=\"1\" id=\"user_type\" /> Donor &emsp;\r\n                                <input type=\"radio\" value=\"2\" id=\"user_type\" /> Charity\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        preventDefault\r\n                        className={classes.submit}\r\n                        onClick={handleSubmit}>\r\n                        Register\r\n                    </Button>\r\n\r\n                    <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Nav.Link to=\"/register\">View Employee Records</Nav.Link>\r\n            </Grid>\r\n          </Grid>\r\n                </form>\r\n                <Typography style={{ margin: 7 }} variant=\"body1\">\r\n                    Status: {message}\r\n                </Typography>\r\n            </div>\r\n            <div>Hi ho</div>\r\n        </Container >\r\n    );\r\n}\r\n\r\n\r\n/*\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date of birth\"\r\n                type=\"date\"\r\n                defaultValue=\"1998-04-02\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                onChange={handleDateChange}\r\n              />\r\n            </Grid>\r\n*/\r\n\r\n"]},"metadata":{},"sourceType":"module"}