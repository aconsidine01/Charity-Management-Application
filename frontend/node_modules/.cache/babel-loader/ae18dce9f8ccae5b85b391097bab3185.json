{"ast":null,"code":"import _slicedToArray from \"C:\\\\Project\\\\apiset2\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\apiset2\\\\frontend\\\\src\\\\Components\\\\Register.js\";\nimport TopNavBar from '../TopNavBar';\nimport React, { Component } from \"react\"; //import AddEmployee from \"./Components/AddEmployee\";\n\nimport { Route, BrowserRouter as Router } from \"react-router-dom\"; //import Table from \"./Components/Table\";\n//import App from './App';\n//import background from './charitybackground.jfif';\n\nimport ReactDOM from 'react-dom';\nimport Recipients from \"../Components/Recipients\";\nimport HomePageCharities from '../Components/HomePageCharities';\nimport { Container } from 'react-bootstrap';\nimport Footer from '../Footer';\nimport Home from '../Home'; //import Registration from \"../Components/Registration\";\n\nfunction Registration() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        firstLoad = _React$useState2[0],\n        setLoad = _React$useState2[1];\n\n  const _React$useState3 = React.useState(new Date(\"1998-04-02T21:11:54\")),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedDate = _React$useState4[0],\n        setSelectedDate = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        username = _React$useState6[0],\n        setUserName = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        email = _React$useState8[0],\n        setEmail = _React$useState8[1];\n\n  const _React$useState9 = React.useState(\"\"),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        password = _React$useState10[0],\n        setPassword = _React$useState10[1];\n\n  const _React$useState11 = React.useState(\"\"),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        user_type = _React$useState12[0],\n        selectedOption = _React$useState12[1];\n\n  const _React$useState13 = React.useState(\"\"),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        message = _React$useState14[0],\n        setMessage = _React$useState14[1];\n\n  const _React$useState15 = React.useState(\"\"),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        fk_user_id = _React$useState16[0],\n        setUserId = _React$useState16[1];\n\n  const _React$useState17 = React.useState(\"\"),\n        _React$useState18 = _slicedToArray(_React$useState17, 2),\n        user_statement = _React$useState18[0],\n        setStatement = _React$useState18[1];\n\n  const _React$useState19 = React.useState([]),\n        _React$useState20 = _slicedToArray(_React$useState19, 2),\n        users = _React$useState20[0],\n        upDateUsers = _React$useState20[1];\n\n  const _React$useState21 = React.useState([]),\n        _React$useState22 = _slicedToArray(_React$useState21, 2),\n        details = _React$useState22[0],\n        upDateDetails = _React$useState22[1]; //const handleDateChange = date => setSelectedDate(date.target.value);\n\n\n  const handleUserNameChange = event => setUserName(event.target.value);\n\n  const handlEmailChange = event => setEmail(event.target.value);\n\n  const handlePasswordChange = event => setPassword(event.target.value);\n\n  const onChangeValue = event => selectedOption(event.target.value);\n\n  const onStatementChange = event => setStatement(event.target.value);\n\n  let isLoading = false;\n\n  async function user(userInput) {\n    const response = await fetch(\"/api/user/insert\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(userInput) // body data type must match \"Content-Type\" header\n\n    });\n    let body = response.json();\n    upDateUsers(body);\n    console.log(body);\n  }\n\n  async function details1(detailsInput) {\n    const response = await fetch(\"/api/details/insert\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(detailsInput) // body data type must match \"Content-Type\" header\n\n    });\n    let body = response.json();\n    upDateDetails(details); //setMessage(body.pk_details_id ? body.pk_details_id : \"Data update failed\");\n  }\n\n  const handleSubmit = variables => {\n    //{if (window.confirm('Ok to enter these details?')) this.onCancel(\"Return\")}\n    //const toInput = { userName, email, password, dob: selectedDate };\n    const userInput = {\n      username,\n      email,\n      password,\n      user_type,\n      reg_approval: \"pending\",\n      reg_date: \"2021-01-22\"\n    };\n    user(userInput);\n    console.log(userInput);\n    let fk_user_id = user.pk_user_id;\n    const detailsInput = {\n      fk_user_id: 26,\n      user_statement: \"whY DOES THIS M=NOT WORK\"\n    };\n    details1(detailsInput);\n    setUserName(users.email);\n    setEmail(users.email);\n    setPassword(\"\");\n    selectedOption(\"\");\n    setStatement(details.pk_user_id);\n    setMessage(\"Record Saved\");\n    if (users.length > 0) isLoading = true;\n  };\n  /*if (firstLoad) {\r\n      // sampleFunc();\r\n      setLoad(false);\r\n      setMessage(\"Please hit save to register\");\r\n  } */\n\n\n  if (users.length > 0) isLoading = true;\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(GroupIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Register as Donor or Charity\"), isLoading ? React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }) : React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    value: username,\n    label: \"UserName\",\n    userName: \"userName\",\n    autoComplete: \"username\",\n    onChange: handleUserNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"email\",\n    name: \"email\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: email,\n    id: \"email\",\n    label: \"Email\",\n    onChange: handlEmailChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"user_statement\",\n    name: \"user_statement\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: user_statement,\n    id: \"user_statement\",\n    label: \"User Statement\",\n    onChange: onStatementChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"password\",\n    value: password,\n    label: \"Password\",\n    name: \"password\",\n    autoComplete: \"password\",\n    onChange: handlePasswordChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    height: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    onChange: onChangeValue,\n    controlId: \"user_type\",\n    height: \"50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Charity or Donor\"), React.createElement(Form.Control, {\n    onChange: onChangeValue,\n    as: \"select\",\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"2\",\n    id: \"user_type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Charity\"), React.createElement(\"option\", {\n    value: \"1\",\n    id: \"user_type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Donor\"))))), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    preventDefault: true,\n    className: classes.submit,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Register\"))), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }));\n}\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: \"Register\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(TopNavBar, {\n      data: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(Registration, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Register, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 233\n  },\n  __self: this\n}), document.getElementById('root'));\nexport default Register;","map":{"version":3,"sources":["C:/Project/apiset2/frontend/src/Components/Register.js"],"names":["TopNavBar","React","Component","Route","BrowserRouter","Router","ReactDOM","Recipients","HomePageCharities","Container","Footer","Home","Registration","classes","useStyles","useState","firstLoad","setLoad","Date","selectedDate","setSelectedDate","username","setUserName","email","setEmail","password","setPassword","user_type","selectedOption","message","setMessage","fk_user_id","setUserId","user_statement","setStatement","users","upDateUsers","details","upDateDetails","handleUserNameChange","event","target","value","handlEmailChange","handlePasswordChange","onChangeValue","onStatementChange","isLoading","user","userInput","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","json","console","log","details1","detailsInput","handleSubmit","variables","reg_approval","reg_date","pk_user_id","length","paper","avatar","form","submit","Register","constructor","props","state","currentPage","render","document","getElementById"],"mappings":"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","sourcesContent":["import TopNavBar from '../TopNavBar';\r\nimport React, { Component } from \"react\";\r\n//import AddEmployee from \"./Components/AddEmployee\";\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\n//import Table from \"./Components/Table\";\r\n//import App from './App';\r\n//import background from './charitybackground.jfif';\r\nimport ReactDOM from 'react-dom';\r\nimport Recipients from \"../Components/Recipients\";\r\nimport HomePageCharities from '../Components/HomePageCharities';\r\nimport { Container } from 'react-bootstrap';\r\nimport Footer from '../Footer';\r\nimport Home from '../Home';\r\n//import Registration from \"../Components/Registration\";\r\n\r\n\r\nfunction Registration() {\r\n\r\n    \r\n    const classes = useStyles();\r\n    const [firstLoad, setLoad] = React.useState(true);\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(\r\n      new Date(\"1998-04-02T21:11:54\")\r\n    );\r\n    const [username, setUserName] = React.useState(\"\");\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [user_type, selectedOption] = React.useState(\"\");\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const [fk_user_id, setUserId] = React.useState(\"\");\r\n    const [user_statement, setStatement] = React.useState(\"\");\r\n    const [users, upDateUsers] = React.useState([]);\r\n    const [details, upDateDetails] = React.useState([]);\r\n    \r\n\r\n    //const handleDateChange = date => setSelectedDate(date.target.value);\r\n    const handleUserNameChange = event => setUserName(event.target.value);\r\n    const handlEmailChange = event => setEmail(event.target.value);\r\n    const handlePasswordChange = event => setPassword(event.target.value);\r\n    const onChangeValue = event => selectedOption(event.target.value);\r\n    const onStatementChange = event => setStatement(event.target.value);\r\n\r\n    let isLoading = false;\r\n      \r\n\r\n\r\n    async function user(userInput) {\r\n        const response = await fetch(\"/api/user/insert\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n            body: JSON.stringify(userInput) // body data type must match \"Content-Type\" header\r\n        });\r\n        let body =  response.json();\r\n        upDateUsers(body);\r\n        console.log(body)\r\n\r\n    }\r\n\r\n    async function details1(detailsInput) {\r\n        const response = await fetch(\"/api/details/insert\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n            body: JSON.stringify(detailsInput) // body data type must match \"Content-Type\" header\r\n        });\r\n        let body =  response.json();\r\n        upDateDetails(details);\r\n        //setMessage(body.pk_details_id ? body.pk_details_id : \"Data update failed\");\r\n    }\r\n\r\n    const handleSubmit = variables => {\r\n        //{if (window.confirm('Ok to enter these details?')) this.onCancel(\"Return\")}\r\n        //const toInput = { userName, email, password, dob: selectedDate };\r\n        const userInput = { username, email, password, user_type, reg_approval: \"pending\", reg_date: \"2021-01-22\" };\r\n        user(userInput);\r\n        console.log(userInput)\r\n        let fk_user_id = user.pk_user_id ;\r\n        const detailsInput = { fk_user_id: 26 , user_statement: \"whY DOES THIS M=NOT WORK\" };\r\n        details1(detailsInput);\r\n        setUserName(users.email);\r\n        setEmail(users.email);\r\n        setPassword(\"\");\r\n        selectedOption(\"\");\r\n        setStatement(details.pk_user_id);\r\n        setMessage(\"Record Saved\");\r\n        if (users.length > 0) isLoading = true;\r\n    };\r\n\r\n    /*if (firstLoad) {\r\n        // sampleFunc();\r\n        setLoad(false);\r\n        setMessage(\"Please hit save to register\");\r\n    } */\r\n\r\n    if (users.length > 0) isLoading = true;\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <GroupIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register as Donor or Charity\r\n        </Typography>\r\n        {isLoading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                value={username}\r\n                                label=\"UserName\"\r\n                                userName=\"userName\"\r\n                                autoComplete=\"username\"\r\n                                onChange={handleUserNameChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"email\"\r\n                                name=\"email\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                value={email}\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                onChange={handlEmailChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"user_statement\"\r\n                                name=\"user_statement\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                value={user_statement}\r\n                                id=\"user_statement\"\r\n                                label=\"User Statement\"\r\n                                onChange={onStatementChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                value={password}\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                autoComplete=\"password\"\r\n                                onChange={handlePasswordChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid  item xs ={6} height=\"10\"> \r\n                            <Form.Group onChange={onChangeValue} controlId=\"user_type\" height=\"50\">\r\n                                <Form.Label>Charity or Donor</Form.Label>\r\n                                <Form.Control onChange={onChangeValue} as=\"select\" multiple>\r\n                                    <option value=\"2\" id=\"user_type\" >Charity</option>\r\n                                    <option value=\"1\" id=\"user_type\" >Donor</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        preventDefault\r\n                        className={classes.submit}\r\n                        onClick={handleSubmit}>\r\n                        Register\r\n                    </Button>\r\n                </form>\r\n      )}\r\n            </div>\r\n            <Form>\r\n</Form>\r\n        </Container >\r\n    );\r\n}\r\n\r\nclass Register extends React.Component {\r\n\r\n\r\n\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                currentPage: \"Register\"\r\n            };\r\n          }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <TopNavBar data={this.state}/>\r\n                <Registration />\r\n                <Footer />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Register />,\r\n    document.getElementById('root')\r\n);\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}