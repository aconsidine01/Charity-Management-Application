{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\apiset2\\\\frontend\\\\src\\\\Components\\\\EditDetailsCharity.js\";\nimport NavBarCharity from './NavBarCharity';\nimport React, { Component } from \"react\"; //import AddEmployee from \"./Components/AddEmployee\";\n//import { Route, BrowserRouter as Router, Redirect } from \"react-router-dom\";\n//import Table from \"./Components/Table\";\n//import App from './App';\n//import background from './charitybackground.jfif';\n\nimport ReactDOM from 'react-dom';\nimport axios from 'axios'; //import Registration from \"../Components/Registration\";\n//import React, { useState } from 'react';\n\nimport { makeStyles } from \"@material-ui/core/styles\"; //import Container from \"@material-ui/core/Container\";\n\nimport { Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBarCharityNotValidated from './NavBarCharityNotValidated'; //import CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(7),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach( // if we have an error string set valid to false\n  val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nasync function nameUpdate(toInput) {\n  const response = await fetch(\"/api/name/update\", {\n    method: \"PUT\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  });\n  let existingname = await response.json();\n  let nameid = existingname.pk_name_id;\n  return nameid;\n}\n\nasync function addressUpdate(toInput) {\n  const response = await fetch(\"/api/address/update\", {\n    method: \"PUT\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  }); //let existingname = await response.json();\n  //let nameid = existingname.pk_name_id;\n  //return addressid;\n}\n\nasync function detailsUpdate(toInput) {\n  const response = await fetch(\"/api/details/update\", {\n    method: \"PUT\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  }); //let existingname = await response.json();\n  //let nameid = existingname.pk_name_id;\n  //return addressid;\n}\n\nasync function userUpdate(toInput) {\n  const response = await fetch(\"/api/user/update\", {\n    method: \"PUT\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  });\n}\n\nclass EditUserComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateUser = e => {\n      e.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        console.log('Valid Form');\n      } else {\n        console.log('Invalid Input');\n      }\n    };\n\n    this.saveName = e => {\n      e.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        let name = {\n          pk_name_id: this.state.names[0].pk_name_id,\n          fk_user_id: this.props.data.userid,\n          orgname: this.state.orgname\n        };\n        nameUpdate(name).then(res => {\n          console.log(res);\n          console.log(this.state.userid);\n        });\n      } else {\n        console.log('Invalid Input');\n      }\n    };\n\n    this.handleFileChange = e => {\n      console.log(e.target.files[0].name);\n      this.setState({\n        selectedFile: e.target.files[0],\n        user_photo: e.target.files[0].name,\n        loaded: 0\n      });\n    };\n\n    this.saveAddress = e => {\n      e.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        let address = {\n          pk_address_id: this.state.addresses[0].pk_address_id,\n          fk_user_id: this.props.data.userid,\n          buildingname: this.state.buildingname,\n          address_line1: this.state.address_line1,\n          address_line2: this.state.address_line2,\n          area: this.state.area,\n          city: this.state.city,\n          county: this.state.county,\n          postcode: this.state.postcode\n        };\n        addressUpdate(address).then(res => {\n          console.log(res);\n          console.log(this.state.userid);\n        });\n      } else {\n        console.log('Invalid Input');\n      }\n    };\n\n    this.saveDetails = e => {\n      e.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        let details = {\n          pk_details_id: this.state.details[0].pk_details_id,\n          fk_user_id: this.props.data.userid,\n          user_statement: this.state.user_statement,\n          user_url: this.state.user_url,\n          user_video: this.state.user_video\n        };\n        detailsUpdate(details).then(res => {\n          console.log(res);\n          console.log(this.state.userid);\n        });\n      } else {\n        console.log('Invalid Input');\n      }\n    };\n\n    this.savePassword = e => {\n      e.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        let user = {\n          pk_user_id: this.props.data.userid,\n          password: this.state.password\n        };\n        userUpdate(user).then(res => {\n          console.log(res);\n          console.log(this.state.userid);\n        });\n      } else {\n        console.log('Invalid Input');\n      }\n    };\n\n    this.saveAccount = e => {\n      e.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        let user = {\n          pk_user_id: this.props.data.userid,\n          account_name: this.state.account_name,\n          sort_code: this.state.sort_code,\n          account_number: this.state.account_number\n        };\n        userUpdate(user).then(res => {\n          console.log(res);\n          console.log(this.state.userid);\n        });\n      } else {\n        console.log('Invalid Input');\n      }\n    };\n\n    this.savePhoto = () => {\n      const data = new FormData();\n      data.append('file', this.state.selectedFile);\n      console.log(this.state.selectedFile);\n      console.log(this.state.user_photo);\n      axios.post(\"http://localhost:4500/upload\", data, {// receive two parameter endpoint url ,form data \n      }).then(res => {\n        // then print response status\n        console.log(res.statusText);\n      });\n\n      if (validateForm(this.state.errors)) {\n        let details = {\n          pk_details_id: this.state.details[0].pk_details_id,\n          fk_user_id: this.props.data.userid,\n          user_photo: this.state.user_photo\n        };\n        detailsUpdate(details).then(res => {\n          console.log(res);\n          console.log(this.state.userid);\n        });\n      } else {\n        console.log('Invalid Input');\n      }\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      console.log(name + value);\n      let errors = this.state.errors;\n      const _this$state = this.state,\n            users = _this$state.users,\n            isLoading = _this$state.isLoading;\n\n      switch (name) {\n        case 'username':\n          errors.username = value.length < 5 ? 'Username must be at least 5 characters long!' : '';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email must be valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be at least 8 characters long!' : '';\n          break;\n\n        case 'user_type':\n          errors.user_type = value.length === 0 ? 'Please select a user type' : '';\n          break;\n\n        case 'account_name':\n          errors.account_name = value.length > 100 || value.length === 0 ? 'Account name can be 100 characters max and cant be empty!' : '';\n          break;\n\n        case 'orgname':\n          errors.account_name = value.length > 100 || value.length === 0 ? 'Charity name can be 100 characters max and cant be empty!' : '';\n          break;\n\n        case 'sort_code':\n          errors.sort_code = value.length !== 6 ? 'Sort code must be 6 characters!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      if (name === 'username') {\n        {\n          users.map(users => {\n            value === users.username && (errors.username = 'Username already in use, please choose another');\n          });\n        }\n      }\n\n      if (name === 'email') {\n        {\n          users.map(users => {\n            value === users.email && (errors.email = 'Email already in use, please choose another');\n          });\n        }\n      }\n\n      this.setState({\n        errors,\n        [e.target.name]: e.target.value\n      }, () => {\n        console.log(errors);\n        console.log(errors.username);\n      });\n    };\n\n    this.userData = JSON.parse(localStorage.getItem('user'));\n    this.state = {\n      userid: this.userData.userid,\n      errors: {\n        username: '',\n        email: '',\n        password: '',\n        user_type: '',\n        selectedFile: ''\n      }\n    };\n    this.saveName = this.saveName.bind(this);\n  }\n  /*\r\n  setStateAsync(state) {\r\n      return new Promise((resolve) => {\r\n          this.setState(state, resolve)\r\n      });\r\n  }\r\n  */\n  //get user\n\n  /*\r\n  async componentDidMount() {\r\n      const response = await fetch('/api/user/');\r\n      const userbody = await response.json();\r\n      this.setState({ users: userbody, isLoading: false });\r\n  }\r\n    //get name\r\n  async componentDidMount() {\r\n      const response = await fetch('/api/name/pathbyuserid/' + this.state.userid);\r\n      const namebody = await response.json();\r\n      this.setState({ names: namebody, isLoading: false });\r\n      console.log(namebody)\r\n  }\r\n    //get address\r\n  async componentDidMount() {\r\n      const response = await fetch('/api/address/pathbyuserid/' + this.state.userid);\r\n      const addressbody = await response.json();\r\n      this.setState({ addresses: addressbody, isLoading: false });\r\n      console.log(addressbody)\r\n  }\r\n  */\n  //get details\n\n\n  async componentDidMount() {\n    const responseDetails = await fetch('/api/details/pathbyuserid/' + this.state.userid);\n    const detailbody = await responseDetails.json();\n    this.setState({\n      details: detailbody,\n      isLoading: false\n    });\n    console.log(detailbody);\n    const responseAddress = await fetch('/api/address/pathbyuserid/' + this.state.userid);\n    const addressbody = await responseAddress.json();\n    this.setState({\n      addresses: addressbody,\n      isLoading: false\n    });\n    console.log(addressbody);\n    const responseName = await fetch('/api/name/pathbyuserid/' + this.state.userid);\n    const namebody = await responseName.json();\n    this.setState({\n      names: namebody,\n      isLoading: false\n    });\n    console.log(namebody);\n    const responseUser = await fetch('/api/user/');\n    const userbody = await responseUser.json();\n    this.setState({\n      users: userbody,\n      isLoading: false\n    });\n  }\n\n  // set user details to session storage\n  componentWillUpdate(nextProps, nextState) {\n    sessionStorage.setItem('user', JSON.stringify(nextState));\n  }\n\n  render() {\n    console.log(this.state.userid);\n    console.log(this.props.data.userid);\n    console.log(this.state);\n    console.log(this.state.addresses);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"Update Charity Details\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"Charity Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.orgname,\n      name: \"orgname\",\n      className: \"form-control\",\n      value: this.state.orgname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-success btn-block\",\n      onClick: this.saveName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \"Update Name \"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, this.state.errors.orgname))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Update Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: this.state.password,\n      name: \"password\",\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \"Confirm Update Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: this.state.confirm_password,\n      name: \"confirm_password\",\n      className: \"form-control\",\n      value: this.state.confirm_password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-success btn-block\",\n      onClick: this.savePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, \"Update Psssword \"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, this.state.errors.password))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, \"Account Name: \"), React.createElement(\"input\", {\n      type: \"test\",\n      placeholder: this.state.account_name,\n      name: \"account_name\",\n      className: \"form-control\",\n      value: this.state.account_name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, \"Sort Code: \"), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: this.state.sort_code,\n      name: \"sort_code\",\n      className: \"form-control\",\n      value: this.state.sort_code,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, \"Account Number: \"), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: this.state.account_number,\n      name: \"account_number\",\n      className: \"form-control\",\n      value: this.state.account_number,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-success btn-block\",\n      onClick: this.saveAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, \"Update Account \"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, this.state.errors.account_name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, this.state.errors.sort_code), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, this.state.errors.account_number))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, \"About Charity: \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.user_statement,\n      name: \"user_statement\",\n      className: \"form-control\",\n      value: this.state.user_statement,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"Charity Video: \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.user_video,\n      name: \"user_video\",\n      className: \"form-control\",\n      value: this.state.user_video,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, \"Charity Weblink: \"), React.createElement(\"input\", {\n      type: \"url\",\n      placeholder: this.state.user_url,\n      name: \"user_url\",\n      className: \"form-control\",\n      value: this.state.user_url,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-success btn-block\",\n      onClick: this.saveDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"Update Details \"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, \"Charity Photo: \"), React.createElement(\"input\", {\n      type: \"file\",\n      placeholder: this.state.user_photo,\n      name: \"file\",\n      className: \"form-control\",\n      onChange: this.handleFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.savePhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, \"Upload\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, \"Buildling Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.buildingname,\n      name: \"buildingname\",\n      className: \"form-control\",\n      value: this.state.buildingname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, \"Address Line1:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.address_line1,\n      name: \"address_line1\",\n      className: \"form-control\",\n      value: this.state.address_line1,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, \"Address Line2:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.address_line2,\n      name: \"address_line2\",\n      className: \"form-control\",\n      value: this.state.address_line2,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, \"Area:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.area,\n      name: \"area\",\n      className: \"form-control\",\n      value: this.state.area,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, \"Town/City:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.city,\n      name: \"city\",\n      className: \"form-control\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, \"County:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.county,\n      name: \"county\",\n      className: \"form-control\",\n      value: this.state.county,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, \"Post Code:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.postcode,\n      name: \"postcode\",\n      className: \"form-control\",\n      value: this.state.postcode,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-success btn-block\",\n      onClick: this.saveAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, \"Update Address \"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, this.state.errors.username), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, this.state.errors.email), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, this.state.errors.password))));\n  }\n\n}\n\nclass EditDetailsCharity extends React.Component {\n  // get user details from session storage\n  componentDidMount() {\n    this.userData = JSON.parse(localStorage.getItem('user'));\n    console.log(this.userData.userid);\n    this.state = {\n      userid: this.userData.userid\n    };\n    console.log(this.state);\n  }\n\n  constructor(props) {\n    super(props);\n    this.userData = JSON.parse(localStorage.getItem('user'));\n    this.state = {\n      currentPage: \"CharityEditDetails\",\n      userid: this.userData.userid,\n      username: this.userData.username,\n      usertype: this.userData.usertype,\n      regapproval: this.userData.regapproval\n    };\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.usertype == 2 && this.state.regapproval === \"approved\") {\n      return React.createElement(React.Fragment, null, React.createElement(NavBarCharity, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }), React.createElement(EditUserComponent, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }));\n    } else if (this.state.usertype == 2) {\n      return React.createElement(React.Fragment, null, React.createElement(NavBarCharityNotValidated, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }), React.createElement(EditUserComponent, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, \"Users must be logged in with appropriate user type to view this page \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }, \"Please login at this link\")));\n  }\n\n}\n\nReactDOM.render(React.createElement(EditDetailsCharity, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 625\n  },\n  __self: this\n}), document.getElementById('root'));\nexport default EditDetailsCharity;","map":{"version":3,"sources":["C:/Project/apiset2/frontend/src/Components/EditDetailsCharity.js"],"names":["NavBarCharity","React","Component","ReactDOM","axios","makeStyles","Nav","NavBarCharityNotValidated","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","textField","marginLeft","marginRight","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","nameUpdate","toInput","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","existingname","json","nameid","pk_name_id","addressUpdate","detailsUpdate","userUpdate","EditUserComponent","constructor","props","validateUser","e","preventDefault","state","console","log","saveName","name","names","fk_user_id","data","userid","orgname","then","res","handleFileChange","target","files","setState","selectedFile","user_photo","loaded","saveAddress","address","pk_address_id","addresses","buildingname","address_line1","address_line2","area","city","county","postcode","saveDetails","details","pk_details_id","user_statement","user_url","user_video","savePassword","user","pk_user_id","password","saveAccount","account_name","sort_code","account_number","savePhoto","FormData","append","post","statusText","onChange","value","handleChange","users","isLoading","username","email","test","user_type","map","userData","parse","localStorage","getItem","bind","componentDidMount","responseDetails","detailbody","responseAddress","addressbody","responseName","namebody","responseUser","userbody","componentWillUpdate","nextProps","nextState","sessionStorage","setItem","render","confirm_password","EditDetailsCharity","currentPage","usertype","regapproval","document","getElementById"],"mappings":"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","sourcesContent":["import NavBarCharity from './NavBarCharity';\r\nimport React, { Component } from \"react\";\r\n//import AddEmployee from \"./Components/AddEmployee\";\r\n//import { Route, BrowserRouter as Router, Redirect } from \"react-router-dom\";\r\n//import Table from \"./Components/Table\";\r\n//import App from './App';\r\n//import background from './charitybackground.jfif';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\n\r\n//import Registration from \"../Components/Registration\";\r\n\r\n//import React, { useState } from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import Container from \"@material-ui/core/Container\";\r\nimport { Nav } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavBarCharityNotValidated from './NavBarCharityNotValidated';\r\n//import CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(7),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst validEmailRegex =\r\n    RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n\r\nconst validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n        // if we have an error string set valid to false\r\n        (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\nasync function nameUpdate(toInput) {\r\n    const response = await fetch(\"/api/name/update\", {\r\n        method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n    let existingname = await response.json();\r\n    let nameid = existingname.pk_name_id;\r\n    return nameid;\r\n}\r\n\r\nasync function addressUpdate(toInput) {\r\n\r\n\r\n    const response = await fetch(\"/api/address/update\", {\r\n        method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n    //let existingname = await response.json();\r\n    //let nameid = existingname.pk_name_id;\r\n    //return addressid;\r\n}\r\n\r\nasync function detailsUpdate(toInput) {\r\n\r\n\r\n    const response = await fetch(\"/api/details/update\", {\r\n        method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n    //let existingname = await response.json();\r\n    //let nameid = existingname.pk_name_id;\r\n    //return addressid;\r\n}\r\n\r\nasync function userUpdate(toInput) {\r\n\r\n\r\n    const response = await fetch(\"/api/user/update\", {\r\n        method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n}\r\n\r\nclass EditUserComponent extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.userData = JSON.parse(localStorage.getItem('user'));\r\n        this.state = {\r\n            userid: this.userData.userid,\r\n            errors: {\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n                user_type: '',\r\n                selectedFile: ''\r\n            }\r\n        }\r\n        this.saveName = this.saveName.bind(this);\r\n    }\r\n\r\n    /*\r\n    setStateAsync(state) {\r\n        return new Promise((resolve) => {\r\n            this.setState(state, resolve)\r\n        });\r\n    }\r\n    */\r\n\r\n    //get user\r\n    /*\r\n    async componentDidMount() {\r\n        const response = await fetch('/api/user/');\r\n        const userbody = await response.json();\r\n        this.setState({ users: userbody, isLoading: false });\r\n    }\r\n\r\n    //get name\r\n    async componentDidMount() {\r\n        const response = await fetch('/api/name/pathbyuserid/' + this.state.userid);\r\n        const namebody = await response.json();\r\n        this.setState({ names: namebody, isLoading: false });\r\n        console.log(namebody)\r\n    }\r\n\r\n    //get address\r\n    async componentDidMount() {\r\n        const response = await fetch('/api/address/pathbyuserid/' + this.state.userid);\r\n        const addressbody = await response.json();\r\n        this.setState({ addresses: addressbody, isLoading: false });\r\n        console.log(addressbody)\r\n    }\r\n    */\r\n\r\n    //get details\r\n    async componentDidMount() {\r\n        const responseDetails = await fetch('/api/details/pathbyuserid/' + this.state.userid);\r\n        const detailbody = await responseDetails.json();\r\n        this.setState({ details: detailbody, isLoading: false });\r\n        console.log(detailbody)\r\n        const responseAddress = await fetch('/api/address/pathbyuserid/' + this.state.userid);\r\n        const addressbody = await responseAddress.json();\r\n        this.setState({ addresses: addressbody, isLoading: false });\r\n        console.log(addressbody)\r\n        const responseName = await fetch('/api/name/pathbyuserid/' + this.state.userid);\r\n        const namebody = await responseName.json();\r\n        this.setState({ names: namebody, isLoading: false });\r\n        console.log(namebody)\r\n        const responseUser = await fetch('/api/user/');\r\n        const userbody = await responseUser.json();\r\n        this.setState({ users: userbody, isLoading: false });\r\n    }\r\n\r\n    validateUser = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm(this.state.errors)) {\r\n            console.log('Valid Form')\r\n        } else {\r\n            console.log('Invalid Input')\r\n        }\r\n    }\r\n\r\n    saveName = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if (validateForm(this.state.errors)) {\r\n            let name = {\r\n                pk_name_id: this.state.names[0].pk_name_id, fk_user_id: this.props.data.userid, orgname: this.state.orgname\r\n            };\r\n            nameUpdate(name).then(res => {\r\n                console.log(res)\r\n                console.log(this.state.userid)\r\n\r\n            });\r\n        } else {\r\n            console.log('Invalid Input')\r\n        }\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        console.log(e.target.files[0].name)\r\n        this.setState(\r\n            {\r\n                selectedFile: e.target.files[0],\r\n                user_photo: e.target.files[0].name,\r\n                loaded: 0,\r\n            }\r\n        )\r\n    }\r\n\r\n    saveAddress = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm(this.state.errors)) {\r\n            let address = {\r\n                pk_address_id: this.state.addresses[0].pk_address_id, fk_user_id: this.props.data.userid,\r\n                buildingname: this.state.buildingname,\r\n                address_line1: this.state.address_line1,\r\n                address_line2: this.state.address_line2,\r\n                area: this.state.area,\r\n                city: this.state.city,\r\n                county: this.state.county,\r\n                postcode: this.state.postcode\r\n            };\r\n            addressUpdate(address).then(res => {\r\n                console.log(res)\r\n                console.log(this.state.userid)\r\n\r\n            });\r\n        } else {\r\n            console.log('Invalid Input')\r\n        }\r\n    }\r\n\r\n    saveDetails = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm(this.state.errors)) {\r\n            let details = {\r\n                pk_details_id: this.state.details[0].pk_details_id, fk_user_id: this.props.data.userid,\r\n                user_statement: this.state.user_statement,\r\n                user_url: this.state.user_url,\r\n                user_video: this.state.user_video\r\n            };\r\n            detailsUpdate(details).then(res => {\r\n                console.log(res)\r\n                console.log(this.state.userid)\r\n\r\n            });\r\n        } else {\r\n            console.log('Invalid Input')\r\n        }\r\n    }\r\n\r\n    savePassword = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm(this.state.errors)) {\r\n            let user = {\r\n                pk_user_id: this.props.data.userid,\r\n                password: this.state.password\r\n            };\r\n            userUpdate(user).then(res => {\r\n                console.log(res)\r\n                console.log(this.state.userid)\r\n\r\n            });\r\n        } else {\r\n            console.log('Invalid Input')\r\n        }\r\n    }\r\n\r\n    saveAccount = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm(this.state.errors)) {\r\n            let user = {\r\n                pk_user_id: this.props.data.userid,\r\n                account_name: this.state.account_name,\r\n                sort_code: this.state.sort_code,\r\n                account_number: this.state.account_number\r\n            };\r\n            userUpdate(user).then(res => {\r\n                console.log(res)\r\n                console.log(this.state.userid)\r\n\r\n            });\r\n        } else {\r\n            console.log('Invalid Input')\r\n        }\r\n    }\r\n\r\n    savePhoto = () => {\r\n        const data = new FormData()\r\n        data.append('file', this.state.selectedFile)\r\n        console.log(this.state.selectedFile)\r\n        console.log(this.state.user_photo)\r\n        axios.post(\"http://localhost:4500/upload\", data, { // receive two parameter endpoint url ,form data \r\n        })\r\n            .then(res => { // then print response status\r\n                console.log(res.statusText)\r\n            })\r\n\r\n        if (validateForm(this.state.errors)) {\r\n            let details = {\r\n                pk_details_id: this.state.details[0].pk_details_id, fk_user_id: this.props.data.userid,\r\n                user_photo: this.state.user_photo\r\n            };\r\n            detailsUpdate(details).then(res => {\r\n                console.log(res)\r\n                console.log(this.state.userid)\r\n\r\n            });\r\n        } else {\r\n            console.log('Invalid Input')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onChange = (e) =>\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n    // set user details to session storage\r\n    componentWillUpdate(nextProps, nextState) {\r\n        sessionStorage.setItem('user', JSON.stringify(nextState));\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        console.log(name + value)\r\n        let errors = this.state.errors;\r\n        const { users, isLoading } = this.state;\r\n\r\n        switch (name) {\r\n            case 'username':\r\n                errors.username = value.length < 5 ? 'Username must be at least 5 characters long!' : '';\r\n                break;\r\n            case 'email':\r\n                errors.email =\r\n                    validEmailRegex.test(value)\r\n                        ? ''\r\n                        : 'Email must be valid!';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                    value.length < 8\r\n                        ? 'Password must be at least 8 characters long!'\r\n                        : '';\r\n                break;\r\n            case 'user_type':\r\n                errors.user_type =\r\n                    value.length === 0\r\n                        ? 'Please select a user type'\r\n                        : '';\r\n                break;\r\n            case 'account_name':\r\n                errors.account_name =\r\n                    value.length > 100 || value.length === 0\r\n                        ? 'Account name can be 100 characters max and cant be empty!'\r\n                        : '';\r\n                break;\r\n                case 'orgname':\r\n                    errors.account_name =\r\n                        value.length > 100 || value.length === 0\r\n                            ? 'Charity name can be 100 characters max and cant be empty!'\r\n                            : '';\r\n                    break;\r\n            case 'sort_code':\r\n                errors.sort_code =\r\n                    value.length !== 6\r\n                        ? 'Sort code must be 6 characters!'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (name === 'username') {\r\n            {\r\n                users.map(users => { (value === users.username) && (errors.username = 'Username already in use, please choose another') }\r\n                )\r\n            }\r\n        }\r\n        if (name === 'email') {\r\n            {\r\n                users.map(users => { (value === users.email) && (errors.email = 'Email already in use, please choose another') }\r\n                )\r\n            }\r\n        }\r\n        this.setState({ errors, [e.target.name]: e.target.value }, () => {\r\n            console.log(errors)\r\n            console.log(errors.username)\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        console.log(this.state.userid)\r\n        console.log(this.props.data.userid)\r\n        console.log(this.state)\r\n        console.log(this.state.addresses)\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Update Charity Details</h2>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Charity Name:</label>\r\n                        <input type=\"text\" placeholder={this.state.orgname} name=\"orgname\" className=\"form-control\" value={this.state.orgname} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary btn-success btn-block\" onClick={this.saveName}>Update Name </button>\r\n                        <h2>{this.state.errors.orgname}</h2>\r\n                    </div>\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Update Password: </label>\r\n                        <input type=\"password\" placeholder={this.state.password} name=\"password\" className=\"form-control\" value={this.state.password} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Confirm Update Password: </label>\r\n                        <input type=\"password\" placeholder={this.state.confirm_password} name=\"confirm_password\" className=\"form-control\" value={this.state.confirm_password} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary btn-success btn-block\" onClick={this.savePassword}>Update Psssword </button>\r\n                        <h2>{this.state.errors.password}</h2>\r\n                    </div>\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Account Name: </label>\r\n                        <input type=\"test\" placeholder={this.state.account_name} name=\"account_name\" className=\"form-control\" value={this.state.account_name} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Sort Code: </label>\r\n                        <input type=\"number\" placeholder={this.state.sort_code} name=\"sort_code\" className=\"form-control\" value={this.state.sort_code} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Account Number: </label>\r\n                        <input type=\"number\" placeholder={this.state.account_number} name=\"account_number\" className=\"form-control\" value={this.state.account_number} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary btn-success btn-block\" onClick={this.saveAccount}>Update Account </button>\r\n                        <h2>{this.state.errors.account_name}</h2>\r\n                        <h2>{this.state.errors.sort_code}</h2>\r\n                        <h2>{this.state.errors.account_number}</h2>\r\n                    </div>\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>About Charity: </label>\r\n                        <input type=\"text\" placeholder={this.state.user_statement} name=\"user_statement\" className=\"form-control\" value={this.state.user_statement} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Charity Video: </label>\r\n                        <input type=\"text\" placeholder={this.state.user_video} name=\"user_video\" className=\"form-control\" value={this.state.user_video} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Charity Weblink: </label>\r\n                        <input type=\"url\" placeholder={this.state.user_url} name=\"user_url\" className=\"form-control\" value={this.state.user_url} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary btn-success btn-block\" onClick={this.saveDetails}>Update Details </button>\r\n                    </div>\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Charity Photo: </label>\r\n                        <input type=\"file\" placeholder={this.state.user_photo} name=\"file\" className=\"form-control\" onChange={this.handleFileChange} />\r\n                        <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.savePhoto}>Upload</button>\r\n                    </div>\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Buildling Name:</label>\r\n                        <input type=\"text\" placeholder={this.state.buildingname} name=\"buildingname\" className=\"form-control\" value={this.state.buildingname} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Address Line1:</label>\r\n                        <input type=\"text\" placeholder={this.state.address_line1} name=\"address_line1\" className=\"form-control\" value={this.state.address_line1} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Address Line2:</label>\r\n                        <input type=\"text\" placeholder={this.state.address_line2} name=\"address_line2\" className=\"form-control\" value={this.state.address_line2} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Area:</label>\r\n                        <input type=\"text\" placeholder={this.state.area} name=\"area\" className=\"form-control\" value={this.state.area} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Town/City:</label>\r\n                        <input type=\"text\" placeholder={this.state.city} name=\"city\" className=\"form-control\" value={this.state.city} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>County:</label>\r\n                        <input type=\"text\" placeholder={this.state.county} name=\"county\" className=\"form-control\" value={this.state.county} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Post Code:</label>\r\n                        <input type=\"text\" placeholder={this.state.postcode} name=\"postcode\" className=\"form-control\" value={this.state.postcode} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary btn-success btn-block\" onClick={this.saveAddress}>Update Address </button>\r\n                        <h2>{this.state.errors.username}</h2>\r\n                        <h2>{this.state.errors.email}</h2>\r\n                        <h2>{this.state.errors.password}</h2>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nclass EditDetailsCharity extends React.Component {\r\n\r\n\r\n    // get user details from session storage\r\n    componentDidMount() {\r\n        this.userData = JSON.parse(localStorage.getItem('user'));\r\n        console.log(this.userData.userid)\r\n\r\n        this.state = {\r\n            userid: this.userData.userid\r\n        }\r\n\r\n        console.log(this.state)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.userData = JSON.parse(localStorage.getItem('user'));\r\n        this.state = {\r\n            currentPage: \"CharityEditDetails\",\r\n            userid: this.userData.userid,\r\n            username: this.userData.username,\r\n            usertype: this.userData.usertype,\r\n            regapproval: this.userData.regapproval\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        if (this.state.usertype == 2 && this.state.regapproval === \"approved\") {\r\n            return (\r\n                <>\r\n                    <NavBarCharity data={this.state} />\r\n                    <EditUserComponent data={this.state} />\r\n                </>\r\n            )\r\n        }\r\n        else if (this.state.usertype == 2) {\r\n            return (\r\n                <>\r\n                    <NavBarCharityNotValidated data={this.state} />\r\n                    <EditUserComponent data={this.state} />\r\n                </>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h2>Users must be logged in with appropriate user type to view this page </h2>\r\n                </div>\r\n                <div>\r\n                    <Nav.Link href=\"/login\">Please login at this link</Nav.Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <EditDetailsCharity />,\r\n    document.getElementById('root')\r\n);\r\n\r\nexport default EditDetailsCharity;"]},"metadata":{},"sourceType":"module"}