{"ast":null,"code":"import _slicedToArray from \"C:\\\\Project\\\\apiset2\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\apiset2\\\\frontend\\\\src\\\\Components\\\\CharityAllocations.js\";\nimport NavBarCharity from './NavBarCharity';\nimport React, { Component } from \"react\"; //import AddEmployee from \"./Components/AddEmployee\";\n\nimport { Route, BrowserRouter as Router } from \"react-router-dom\"; //import Table from \"./Components/Table\";\n//import App from './App';\n//import background from './charitybackground.jfif';\n\nimport ReactDOM from 'react-dom';\nimport Recipients from \"../Components/Recipients\";\nimport Footer from '../Footer';\nimport Home from '../Home';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap';\nimport isFirstDayOfMonth from 'date-fns/isFirstDayOfMonth/index.js';\nimport axios from 'axios';\nimport jsPDF from 'jspdf'; //import './App.css';  \n\nimport html2canvas from 'html2canvas';\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 600\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: `10px`,\n    height: \"100%\",\n    width: \"99%\",\n    marginTop: theme.spacing(7)\n  },\n  link: {\n    color: \"rgba(0,0,0,0.65)\",\n    textDecoration: \"none\",\n    marginLeft: \"10%\",\n    alignSelf: \"flex-start\",\n    \"&:hover\": {\n      color: \"rgba(0,0,0,1)\"\n    }\n  }\n}));\n\nfunction CharityAllocationsList() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        recipients = _React$useState2[0],\n        upDateRecipients = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        details = _React$useState4[0],\n        upDateDetails = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        name = _React$useState6[0],\n        upDateName = _React$useState6[1];\n\n  const _React$useState7 = React.useState([]),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        allocations = _React$useState8[0],\n        upDateAllocations = _React$useState8[1];\n\n  const _React$useState9 = React.useState(true),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        firstLoad = _React$useState10[0],\n        setLoad = _React$useState10[1];\n\n  const _React$useState11 = React.useState([]),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        amount = _React$useState12[0],\n        setAmount = _React$useState12[1];\n\n  const _React$useState13 = React.useState([]),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        recipientid = _React$useState14[0],\n        upDateRecipientId = _React$useState14[1];\n\n  const _React$useState15 = React.useState([]),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        donorid = _React$useState16[0],\n        upDateDonorId = _React$useState16[1];\n\n  const _React$useState17 = React.useState(false),\n        _React$useState18 = _slicedToArray(_React$useState17, 2),\n        donate = _React$useState18[0],\n        setDonation = _React$useState18[1];\n\n  const _React$useState19 = React.useState(true),\n        _React$useState20 = _slicedToArray(_React$useState19, 2),\n        giftAid = _React$useState20[0],\n        setGiftAid = _React$useState20[1];\n\n  const _React$useState21 = React.useState(true),\n        _React$useState22 = _slicedToArray(_React$useState21, 2),\n        anonymity = _React$useState22[0],\n        setAnonymity = _React$useState22[1];\n\n  const _React$useState23 = React.useState(true),\n        _React$useState24 = _slicedToArray(_React$useState23, 2),\n        isSelected = _React$useState24[0],\n        updateSelected = _React$useState24[1];\n\n  const _React$useState25 = React.useState(true),\n        _React$useState26 = _slicedToArray(_React$useState25, 2),\n        isSelected1 = _React$useState26[0],\n        updateSelected1 = _React$useState26[1];\n\n  const _React$useState27 = React.useState([]),\n        _React$useState28 = _slicedToArray(_React$useState27, 2),\n        message = _React$useState28[0],\n        setMessage = _React$useState28[1];\n\n  const _React$useState29 = React.useState([]),\n        _React$useState30 = _slicedToArray(_React$useState29, 2),\n        userid = _React$useState30[0],\n        UpdateUserId = _React$useState30[1];\n\n  const _React$useState31 = React.useState([JSON.parse(localStorage.getItem('user'))]),\n        _React$useState32 = _slicedToArray(_React$useState31, 2),\n        userData = _React$useState32[0],\n        UpdateUserData = _React$useState32[1];\n\n  let isLoading = true;\n  console.log(userData);\n\n  async function getAllocations() {\n    let responseAllocations = await fetch('/api/allocationsrecords/pathbyuserid/' + userData[0].userid);\n    let allocationsList = await responseAllocations.json();\n    console.log(allocationsList);\n    upDateAllocations(allocationsList);\n  }\n\n  if (firstLoad) {\n    getAllocations();\n    setLoad(false);\n  }\n\n  if (allocations.length > 0) isLoading = false;\n\n  function anonymityChange(e) {\n    if (isSelected1) {\n      updateSelected1(false);\n      setAnonymity(\"full\");\n    } else {\n      updateSelected1(true);\n      setAnonymity(\"none\");\n    }\n  }\n\n  function printDocument() {\n    const input = document.getElementById('pdfdiv');\n    html2canvas(input).then(canvas => {\n      var imgWidth = 200;\n      var pageHeight = 290;\n      var imgHeight = canvas.height * imgWidth / canvas.width;\n      var heightLeft = imgHeight;\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      var position = 0;\n      var heightLeft = imgHeight;\n      pdf.addImage(imgData, 'JPEG', 0, position, imgWidth, imgHeight);\n      pdf.save(\"download.pdf\");\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(GroupIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Allocations made by \", userData[0].username), isLoading ? React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"No allocations made\") : React.createElement(TableContainer, {\n    id: \"pdfdiv\",\n    style: {\n      width: \"80%\",\n      margin: \"0 10px\"\n    },\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Project Name\"), React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Allocation Amount\"), React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Allocation Datetime\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, allocations === null || allocations === void 0 ? void 0 : allocations.map(allocations => React.createElement(TableRow, {\n    key: allocations.pk_allocation_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, allocations.project_name === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }) : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, allocations.project_name), !allocations.allocation_amount === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }) : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"\\xA3\", allocations.allocation_amount), !allocations.allocation_datetime === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }) : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, allocations.allocation_datetime)))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"btn btn-primary btn-success btn-block\",\n    onClick: printDocument,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Download Statement\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }));\n}\n\nclass CharityAllocations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.userData = JSON.parse(localStorage.getItem('user'));\n    this.state = {\n      currentPage: \"CharityAllocations\",\n      userid: this.userData.userid,\n      username: this.userData.username,\n      usertype: this.userData.usertype\n    };\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.usertype == 2) {\n      return React.createElement(React.Fragment, null, React.createElement(NavBarCharity, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(CharityAllocationsList, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Users must be logged in with appropriate user type to view this page \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Please login at this link\")));\n  }\n\n}\n\nReactDOM.render(React.createElement(CharityAllocations, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 221\n  },\n  __self: this\n}), document.getElementById('root'));\nexport default CharityAllocations;","map":{"version":3,"sources":["C:/Project/apiset2/frontend/src/Components/CharityAllocations.js"],"names":["NavBarCharity","React","Component","Route","BrowserRouter","Router","ReactDOM","Recipients","Footer","Home","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Avatar","GroupIcon","Link","Typography","CircularProgress","Navbar","Nav","NavDropdown","Form","FormControl","Button","Container","isFirstDayOfMonth","axios","jsPDF","html2canvas","useStyles","theme","table","minWidth","avatar","margin","spacing","backgroundColor","palette","secondary","main","paper","display","flexDirection","justifyContent","alignItems","height","width","marginTop","link","color","textDecoration","marginLeft","alignSelf","CharityAllocationsList","classes","useState","recipients","upDateRecipients","details","upDateDetails","name","upDateName","allocations","upDateAllocations","firstLoad","setLoad","amount","setAmount","recipientid","upDateRecipientId","donorid","upDateDonorId","donate","setDonation","giftAid","setGiftAid","anonymity","setAnonymity","isSelected","updateSelected","isSelected1","updateSelected1","message","setMessage","userid","UpdateUserId","JSON","parse","localStorage","getItem","userData","UpdateUserData","isLoading","console","log","getAllocations","responseAllocations","fetch","allocationsList","json","length","anonymityChange","e","printDocument","input","document","getElementById","then","canvas","imgWidth","pageHeight","imgHeight","heightLeft","imgData","toDataURL","pdf","position","addImage","save","username","map","pk_allocation_id","project_name","allocation_amount","allocation_datetime","CharityAllocations","constructor","props","state","currentPage","usertype","render"],"mappings":"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","sourcesContent":["import NavBarCharity from './NavBarCharity';\r\nimport React, { Component } from \"react\";\r\n//import AddEmployee from \"./Components/AddEmployee\";\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\n//import Table from \"./Components/Table\";\r\n//import App from './App';\r\n//import background from './charitybackground.jfif';\r\nimport ReactDOM from 'react-dom';\r\nimport Recipients from \"../Components/Recipients\";\r\nimport Footer from '../Footer';\r\nimport Home from '../Home';\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap'\r\nimport isFirstDayOfMonth from 'date-fns/isFirstDayOfMonth/index.js';\r\nimport axios from 'axios';  \r\nimport jsPDF from 'jspdf';   \r\n//import './App.css';  \r\nimport html2canvas from 'html2canvas';  \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 600\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: `10px`,\r\n    height: \"100%\",\r\n    width: \"99%\",\r\n    marginTop: theme.spacing(7)\r\n  },\r\n  link: {\r\n    color: \"rgba(0,0,0,0.65)\",\r\n    textDecoration: \"none\",\r\n    marginLeft: \"10%\",\r\n    alignSelf: \"flex-start\",\r\n    \"&:hover\": {\r\n      color: \"rgba(0,0,0,1)\"\r\n    }\r\n  }\r\n}));\r\n\r\nfunction CharityAllocationsList() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [recipients, upDateRecipients] = React.useState([]);\r\n  const [details, upDateDetails] = React.useState([]);\r\n  const [name, upDateName] = React.useState([]);\r\n  const [allocations, upDateAllocations] = React.useState([]);\r\n  const [firstLoad, setLoad] = React.useState(true);\r\n  const [amount, setAmount] = React.useState([]);\r\n  const [recipientid, upDateRecipientId] = React.useState([]);\r\n  const [donorid, upDateDonorId] = React.useState([])\r\n  const [donate, setDonation] = React.useState(false);\r\n  const [giftAid, setGiftAid] = React.useState(true);\r\n  const [anonymity, setAnonymity] = React.useState(true);\r\n  const [isSelected, updateSelected] = React.useState(true);\r\n  const [isSelected1, updateSelected1] = React.useState(true);\r\n  const [message, setMessage] = React.useState([]);\r\n  const [userid, UpdateUserId] = React.useState([]);\r\n  const [userData, UpdateUserData] = React.useState([JSON.parse(localStorage.getItem('user'))]);\r\n  let isLoading = true;\r\n  console.log(userData)\r\n\r\n  \r\n\r\n  async function getAllocations() {\r\n    let responseAllocations = await fetch('/api/allocationsrecords/pathbyuserid/' + userData[0].userid);\r\n    let allocationsList = await responseAllocations.json();\r\n    console.log(allocationsList)\r\n    upDateAllocations(allocationsList)\r\n  }\r\n\r\n\r\n\r\n  if (firstLoad) {\r\n    getAllocations();\r\n    setLoad(false);\r\n  }\r\n\r\n  if (allocations.length > 0) isLoading = false;\r\n\r\n\r\n\r\n  function anonymityChange(e) {\r\n    if (isSelected1) {\r\n      updateSelected1(false)\r\n      setAnonymity(\"full\")\r\n    }\r\n    else {\r\n      updateSelected1(true)\r\n      setAnonymity(\"none\")\r\n    }\r\n  }\r\n\r\n  function printDocument() {  \r\n    const input = document.getElementById('pdfdiv');  \r\n    html2canvas(input)  \r\n      .then((canvas) => {  \r\n        var imgWidth = 200;  \r\n        var pageHeight = 290;  \r\n        var imgHeight = canvas.height * imgWidth / canvas.width;  \r\n        var heightLeft = imgHeight;  \r\n        const imgData = canvas.toDataURL('image/png');  \r\n        const pdf = new jsPDF('p', 'mm', 'a4')  \r\n        var position = 0;  \r\n        var heightLeft = imgHeight;  \r\n        pdf.addImage(imgData, 'JPEG', 0, position, imgWidth, imgHeight);  \r\n        pdf.save(\"download.pdf\");  \r\n      });  \r\n  } \r\n\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <Avatar className={classes.avatar}>\r\n        <GroupIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Allocations made by {userData[0].username}\r\n        </Typography>\r\n\r\n      {isLoading ? (\r\n        <h4>No allocations made</h4>\r\n      ) : (\r\n        <TableContainer id=\"pdfdiv\"\r\n          style={{ width: \"80%\", margin: \"0 10px\" }}\r\n          component={Paper}\r\n        >\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"centre\">Project Name</TableCell>\r\n                <TableCell align=\"centre\">Allocation Amount</TableCell>\r\n                <TableCell align=\"centre\">Allocation Datetime</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allocations?.map(allocations =>\r\n                <TableRow key={allocations.pk_allocation_id}>\r\n                  {allocations.project_name === null ? <TableCell align=\"centre\"></TableCell> : <TableCell align=\"centre\">{allocations.project_name}</TableCell>}\r\n                  {!allocations.allocation_amount === null ? <TableCell align=\"centre\"></TableCell> : <TableCell align=\"centre\">£{allocations.allocation_amount}</TableCell>}\r\n                  {!allocations.allocation_datetime === null ? <TableCell align=\"centre\" ></TableCell> : <TableCell align=\"centre\" >{allocations.allocation_datetime}</TableCell>}\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <br></br>\r\n            <Button className=\"btn btn-primary btn-success btn-block\" onClick={printDocument}>  \r\n            Download Statement</Button> \r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nclass CharityAllocations extends React.Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.userData = JSON.parse(localStorage.getItem('user'));\r\n    this.state = {\r\n      currentPage: \"CharityAllocations\",\r\n      userid: this.userData.userid,\r\n      username: this.userData.username,\r\n      usertype: this.userData.usertype\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(this.state)\r\n    if (this.state.usertype == 2) {\r\n      return (\r\n        <>\r\n          <NavBarCharity data={this.state} />\r\n          <CharityAllocationsList data={this.state} />\r\n          <Footer />\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>Users must be logged in with appropriate user type to view this page </h2>\r\n        </div>\r\n        <div>\r\n          <Nav.Link href=\"/login\">Please login at this link</Nav.Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <CharityAllocations />,\r\n  document.getElementById('root')\r\n);\r\n\r\nexport default CharityAllocations;"]},"metadata":{},"sourceType":"module"}