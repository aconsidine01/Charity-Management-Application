{"ast":null,"code":"import _slicedToArray from \"C:\\\\Project\\\\apiset2\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\apiset2\\\\frontend\\\\src\\\\Components\\\\Registration.js\";\nimport React, { useState } from 'react';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Navbar, Nav, NavDropdown, Form, FormControl } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(7),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\nexport default function Registration() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        firstLoad = _React$useState2[0],\n        setLoad = _React$useState2[1];\n\n  const _React$useState3 = React.useState(new Date(\"1998-04-02T21:11:54\")),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedDate = _React$useState4[0],\n        setSelectedDate = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        username = _React$useState6[0],\n        setUserName = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        email = _React$useState8[0],\n        setEmail = _React$useState8[1];\n\n  const _React$useState9 = React.useState(\"\"),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        password = _React$useState10[0],\n        setPassword = _React$useState10[1];\n\n  const _React$useState11 = React.useState(\"\"),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        user_type = _React$useState12[0],\n        selectedOption = _React$useState12[1];\n\n  const _React$useState13 = React.useState(\"\"),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        message = _React$useState14[0],\n        setMessage = _React$useState14[1];\n\n  const _React$useState15 = React.useState(\"\"),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        fk_user_id = _React$useState16[0],\n        setUserId = _React$useState16[1];\n\n  const _React$useState17 = React.useState(\"\"),\n        _React$useState18 = _slicedToArray(_React$useState17, 2),\n        user_statement = _React$useState18[0],\n        setStatement = _React$useState18[1];\n\n  const _React$useState19 = React.useState([]),\n        _React$useState20 = _slicedToArray(_React$useState19, 2),\n        users = _React$useState20[0],\n        upDateUsers = _React$useState20[1];\n\n  const _React$useState21 = React.useState([]),\n        _React$useState22 = _slicedToArray(_React$useState21, 2),\n        details = _React$useState22[0],\n        upDateDetails = _React$useState22[1]; //const handleDateChange = date => setSelectedDate(date.target.value);\n\n\n  const handleUserNameChange = event => setUserName(event.target.value);\n\n  const handlEmailChange = event => setEmail(event.target.value);\n\n  const handlePasswordChange = event => setPassword(event.target.value);\n\n  const onChangeValue = event => selectedOption(event.target.value);\n\n  const onStatementChange = event => setStatement(event.target.value);\n\n  let isLoading = false;\n\n  async function user(userInput) {\n    const response = await fetch(\"/api/user/insert\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(userInput) // body data type must match \"Content-Type\" header\n\n    });\n    let body = response.json();\n    upDateUsers(body);\n    console.log(body);\n  }\n\n  async function details1(detailsInput) {\n    const response = await fetch(\"/api/details/insert\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(detailsInput) // body data type must match \"Content-Type\" header\n\n    });\n    let body = response.json();\n    upDateDetails(details); //setMessage(body.pk_details_id ? body.pk_details_id : \"Data update failed\");\n  }\n\n  const handleSubmit = variables => {\n    //{if (window.confirm('Ok to enter these details?')) this.onCancel(\"Return\")}\n    //const toInput = { userName, email, password, dob: selectedDate };\n    const userInput = {\n      username,\n      email,\n      password,\n      user_type,\n      reg_approval: \"pending\",\n      reg_date: \"2021-01-22\"\n    };\n    user(userInput);\n    let fk_user_id = user.pk_user_id;\n    const detailsInput = {\n      fk_user_id: 26,\n      user_statement: \"whY DOES THIS M=NOT WORK\"\n    };\n    details1(detailsInput);\n    setUserName(users.email);\n    setEmail(users.email);\n    setPassword(\"\");\n    selectedOption(\"\");\n    setStatement(details.pk_user_id);\n    setMessage(\"Record Saved\");\n    if (users.length > 0) isLoading = true;\n  };\n  /*if (firstLoad) {\r\n      // sampleFunc();\r\n      setLoad(false);\r\n      setMessage(\"Please hit save to register\");\r\n  } */\n\n\n  if (users.length > 0) isLoading = true;\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(GroupIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Register as Donor or Charity\"), isLoading ? React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }) : React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    value: username,\n    label: \"UserName\",\n    userName: \"userName\",\n    autoComplete: \"username\",\n    onChange: handleUserNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"email\",\n    name: \"email\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: email,\n    id: \"email\",\n    label: \"Email\",\n    onChange: handlEmailChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"user_statement\",\n    name: \"user_statement\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: user_statement,\n    id: \"user_statement\",\n    label: \"User Statement\",\n    onChange: onStatementChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"password\",\n    value: password,\n    label: \"Password\",\n    name: \"password\",\n    autoComplete: \"password\",\n    onChange: handlePasswordChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    height: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    onChange: onChangeValue,\n    controlId: \"user_type\",\n    height: \"50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Charity or Donor\"), React.createElement(Form.Control, {\n    onChange: onChangeValue,\n    as: \"select\",\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"2\",\n    id: \"user_type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Charity\"), React.createElement(\"option\", {\n    value: \"1\",\n    id: \"user_type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Donor\"))))), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    preventDefault: true,\n    className: classes.submit,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    to: \"/view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Update Name\"))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, details.pk_details_id), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Submit: \", message)));\n}\n/*\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date of birth\"\r\n                type=\"date\"\r\n                defaultValue=\"1998-04-02\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                onChange={handleDateChange}\r\n              />\r\n            </Grid>\r\n*/","map":{"version":3,"sources":["C:/Project/apiset2/frontend/src/Components/Registration.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","Link","Grid","GroupIcon","Typography","makeStyles","Container","Navbar","Nav","NavDropdown","Form","FormControl","CircularProgress","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","textField","marginLeft","marginRight","Registration","classes","firstLoad","setLoad","Date","selectedDate","setSelectedDate","username","setUserName","email","setEmail","password","setPassword","user_type","selectedOption","message","setMessage","fk_user_id","setUserId","user_statement","setStatement","users","upDateUsers","details","upDateDetails","handleUserNameChange","event","target","value","handlEmailChange","handlePasswordChange","onChangeValue","onStatementChange","isLoading","user","userInput","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","json","console","log","details1","detailsInput","handleSubmit","variables","reg_approval","reg_date","pk_user_id","length","pk_details_id"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(7),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport default function Registration() {\r\n\r\n    \r\n    const classes = useStyles();\r\n    const [firstLoad, setLoad] = React.useState(true);\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(\r\n      new Date(\"1998-04-02T21:11:54\")\r\n    );\r\n    const [username, setUserName] = React.useState(\"\");\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [user_type, selectedOption] = React.useState(\"\");\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const [fk_user_id, setUserId] = React.useState(\"\");\r\n    const [user_statement, setStatement] = React.useState(\"\");\r\n    const [users, upDateUsers] = React.useState([]);\r\n    const [details, upDateDetails] = React.useState([]);\r\n    \r\n\r\n    //const handleDateChange = date => setSelectedDate(date.target.value);\r\n    const handleUserNameChange = event => setUserName(event.target.value);\r\n    const handlEmailChange = event => setEmail(event.target.value);\r\n    const handlePasswordChange = event => setPassword(event.target.value);\r\n    const onChangeValue = event => selectedOption(event.target.value);\r\n    const onStatementChange = event => setStatement(event.target.value);\r\n\r\n    let isLoading = false;\r\n      \r\n\r\n\r\n    async function user(userInput) {\r\n        const response = await fetch(\"/api/user/insert\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n            body: JSON.stringify(userInput) // body data type must match \"Content-Type\" header\r\n        });\r\n        let body =  response.json();\r\n        upDateUsers(body);\r\n        console.log(body)\r\n\r\n    }\r\n\r\n    async function details1(detailsInput) {\r\n        const response = await fetch(\"/api/details/insert\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n            body: JSON.stringify(detailsInput) // body data type must match \"Content-Type\" header\r\n        });\r\n        let body =  response.json();\r\n        upDateDetails(details);\r\n        //setMessage(body.pk_details_id ? body.pk_details_id : \"Data update failed\");\r\n    }\r\n\r\n    const handleSubmit = variables => {\r\n        //{if (window.confirm('Ok to enter these details?')) this.onCancel(\"Return\")}\r\n        //const toInput = { userName, email, password, dob: selectedDate };\r\n        const userInput = { username, email, password, user_type, reg_approval: \"pending\", reg_date: \"2021-01-22\" };\r\n        user(userInput);\r\n        let fk_user_id = user.pk_user_id ;\r\n        const detailsInput = { fk_user_id: 26 , user_statement: \"whY DOES THIS M=NOT WORK\" };\r\n        details1(detailsInput);\r\n        setUserName(users.email);\r\n        setEmail(users.email);\r\n        setPassword(\"\");\r\n        selectedOption(\"\");\r\n        setStatement(details.pk_user_id);\r\n        setMessage(\"Record Saved\");\r\n        if (users.length > 0) isLoading = true;\r\n    };\r\n\r\n    /*if (firstLoad) {\r\n        // sampleFunc();\r\n        setLoad(false);\r\n        setMessage(\"Please hit save to register\");\r\n    } */\r\n\r\n    if (users.length > 0) isLoading = true;\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <GroupIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register as Donor or Charity\r\n        </Typography>\r\n        {isLoading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                value={username}\r\n                                label=\"UserName\"\r\n                                userName=\"userName\"\r\n                                autoComplete=\"username\"\r\n                                onChange={handleUserNameChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"email\"\r\n                                name=\"email\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                value={email}\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                onChange={handlEmailChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"user_statement\"\r\n                                name=\"user_statement\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                value={user_statement}\r\n                                id=\"user_statement\"\r\n                                label=\"User Statement\"\r\n                                onChange={onStatementChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                value={password}\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                autoComplete=\"password\"\r\n                                onChange={handlePasswordChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid  item xs ={6} height=\"10\"> \r\n                            <Form.Group onChange={onChangeValue} controlId=\"user_type\" height=\"50\">\r\n                                <Form.Label>Charity or Donor</Form.Label>\r\n                                <Form.Control onChange={onChangeValue} as=\"select\" multiple>\r\n                                    <option value=\"2\" id=\"user_type\" >Charity</option>\r\n                                    <option value=\"1\" id=\"user_type\" >Donor</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        preventDefault\r\n                        className={classes.submit}\r\n                        onClick={handleSubmit}>\r\n                        Register\r\n                    </Button>\r\n\r\n                    <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Nav.Link to=\"/view\">Update Name</Nav.Link>\r\n            </Grid>\r\n          </Grid>\r\n                </form>\r\n      )}\r\n            </div>\r\n            <div>{details.pk_details_id}</div>\r\n            <Form>\r\n\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Submit: {message}\r\n  </Button>\r\n</Form>\r\n        </Container >\r\n    );\r\n}\r\n\r\n\r\n/*\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date of birth\"\r\n                type=\"date\"\r\n                defaultValue=\"1998-04-02\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                onChange={handleDateChange}\r\n              />\r\n            </Grid>\r\n*/\r\n\r\n"]},"metadata":{},"sourceType":"module"}