{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\apiset2\\\\frontend\\\\src\\\\Components\\\\Registration2.js\";\n\n/** @jsx React.DOM */\nvar React = require('react/addons');\n\nvar Input = require('./components/Input.js');\n\nvar _ = require('underscore');\n\nvar Select = require('./components/Select');\n\nvar STATES = require('./components/data/states');\n\nvar Icon = require('./components/Icon.js');\n\nvar CreateAccountScreen = React.createClass({\n  displayName: \"CreateAccountScreen\",\n  getInitialState: function () {\n    return {\n      email: null,\n      companyName: null,\n      password: null,\n      confirmPassword: null,\n      statesValue: null,\n      forbiddenWords: [\"password\", \"user\", \"username\"]\n    };\n  },\n  handlePasswordInput: function (event) {\n    if (!_.isEmpty(this.state.confirmPassword)) {\n      this.refs.passwordConfirm.isValid();\n    }\n\n    this.refs.passwordConfirm.hideError();\n    this.setState({\n      password: event.target.value\n    });\n  },\n  handleConfirmPasswordInput: function (event) {\n    this.setState({\n      confirmPassword: event.target.value\n    });\n  },\n  saveAndContinue: function (e) {\n    e.preventDefault();\n    var canProceed = this.validateEmail(this.state.email) && !_.isEmpty(this.state.statesValue) && this.refs.password.isValid() && this.refs.passwordConfirm.isValid();\n\n    if (canProceed) {\n      var data = {\n        email: this.state.email,\n        state: this.state.statesValue\n      };\n      alert('Thanks.');\n    } else {\n      this.refs.email.isValid();\n      this.refs.state.isValid();\n      this.refs.companyName.isValid();\n      this.refs.password.isValid();\n      this.refs.passwordConfirm.isValid();\n    }\n  },\n  isConfirmedPassword: function (event) {\n    return event == this.state.password;\n  },\n  handleCompanyInput: function (event) {\n    this.setState({\n      companyName: event.target.value\n    });\n  },\n  handleEmailInput: function (event) {\n    this.setState({\n      email: event.target.value\n    });\n  },\n  validateEmail: function (event) {\n    // regex from http://stackoverflow.com/questions/46155/validate-email-address-in-javascript\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(event);\n  },\n  isEmpty: function (value) {\n    return !_.isEmpty(value);\n  },\n  updateStatesValue: function (value) {\n    this.setState({\n      statesValue: value\n    });\n  },\n  render: function () {\n    return React.DOM(\"div\", {\n      className: \"create_account_screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.DOM(\"div\", {\n      className: \"create_account_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.DOM(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Create account\"), React.DOM(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Example of form validation built with React.\"), React.DOM(\"form\", {\n      onSubmit: this.saveAndContinue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.DOM(Input, {\n      text: \"Email Address\",\n      ref: \"email\",\n      type: \"text\",\n      defaultValue: this.state.email,\n      validate: this.validateEmail,\n      value: this.state.email,\n      onChange: this.handleEmailInput,\n      errorMessage: \"Email is invalid\",\n      emptyMessage: \"Email can't be empty\",\n      errorVisible: this.state.showEmailError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.DOM(Input, {\n      text: \"Company Name\",\n      ref: \"companyName\",\n      validate: this.isEmpty,\n      value: this.state.companyName,\n      onChange: this.handleCompanyInput,\n      emptyMessage: \"Company name can't be empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.DOM(Input, {\n      text: \"Password\",\n      type: \"password\",\n      ref: \"password\",\n      validator: \"true\",\n      minCharacters: \"8\",\n      requireCapitals: \"1\",\n      requireNumbers: \"1\",\n      forbiddenWords: this.state.forbiddenWords,\n      value: this.state.passsword,\n      emptyMessage: \"Password is invalid\",\n      onChange: this.handlePasswordInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.DOM(Input, {\n      text: \"Confirm password\",\n      ref: \"passwordConfirm\",\n      type: \"password\",\n      validate: this.isConfirmedPassword,\n      value: this.state.confirmPassword,\n      onChange: this.handleConfirmPasswordInput,\n      emptyMessage: \"Please confirm your password\",\n      errorMessage: \"Passwords don't match\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.DOM(Select, {\n      options: STATES,\n      ref: \"state\",\n      value: this.state.statesValue,\n      onChange: this.updateStatesValue,\n      searchable: this.props.searchable,\n      emptyMessage: \"Please select state\",\n      errorMessage: \"Please select state\",\n      placeholder: \"Choose Your State\",\n      placeholderTitle: \"Your State\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.DOM(\"button\", {\n      type: \"submit\",\n      className: \"button button_wide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"CREATE ACCOUNT\")), React.DOM(\"a\", {\n      href: \"https://github.com/mikepro4/react-signup-form\",\n      target: \"_blank\",\n      className: \"github_link\",\n      title: \"View Source Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.DOM(Icon, {\n      type: \"guthub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))));\n  }\n});\nmodule.exports = CreateAccountScreen;","map":{"version":3,"sources":["C:/Project/apiset2/frontend/src/Components/Registration2.js"],"names":["React","require","Input","_","Select","STATES","Icon","CreateAccountScreen","createClass","getInitialState","email","companyName","password","confirmPassword","statesValue","forbiddenWords","handlePasswordInput","event","isEmpty","state","refs","passwordConfirm","isValid","hideError","setState","target","value","handleConfirmPasswordInput","saveAndContinue","e","preventDefault","canProceed","validateEmail","data","alert","isConfirmedPassword","handleCompanyInput","handleEmailInput","re","test","updateStatesValue","render","showEmailError","passsword","props","searchable","module","exports"],"mappings":"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","sourcesContent":["/** @jsx React.DOM */\r\nvar React = require('react/addons');\r\nvar Input = require('./components/Input.js');\r\nvar _ = require('underscore');\r\nvar Select = require('./components/Select');\r\nvar STATES = require('./components/data/states');\r\nvar Icon = require('./components/Icon.js');\r\n\r\nvar CreateAccountScreen = React.createClass({\r\n  getInitialState: function () {\r\n    return {\r\n      email: null,\r\n      companyName: null,\r\n      password: null,\r\n      confirmPassword: null,\r\n      statesValue: null,\r\n      forbiddenWords: [\"password\", \"user\", \"username\"]\r\n    }\r\n  },\r\n\r\n  handlePasswordInput: function (event) {\r\n    if(!_.isEmpty(this.state.confirmPassword)){\r\n      this.refs.passwordConfirm.isValid();\r\n    }\r\n    this.refs.passwordConfirm.hideError();\r\n    this.setState({\r\n      password: event.target.value\r\n    });\r\n  },\r\n\r\n  handleConfirmPasswordInput: function (event) {\r\n    this.setState({\r\n      confirmPassword: event.target.value\r\n    });\r\n  },\r\n\r\n  saveAndContinue: function (e) {\r\n    e.preventDefault();\r\n\r\n    var canProceed = this.validateEmail(this.state.email) \r\n        && !_.isEmpty(this.state.statesValue)\r\n        && this.refs.password.isValid()\r\n        && this.refs.passwordConfirm.isValid();\r\n\r\n    if(canProceed) {\r\n      var data = {\r\n        email: this.state.email,\r\n        state: this.state.statesValue\r\n      }\r\n      alert('Thanks.');\r\n    } else {\r\n      this.refs.email.isValid();\r\n      this.refs.state.isValid();\r\n      this.refs.companyName.isValid();\r\n      this.refs.password.isValid();\r\n      this.refs.passwordConfirm.isValid();\r\n    }\r\n  },\r\n\r\n  isConfirmedPassword: function (event) {\r\n    return (event == this.state.password)\r\n  },\r\n\r\n  handleCompanyInput: function(event) {\r\n    this.setState({\r\n      companyName: event.target.value\r\n    })\r\n  },\r\n\r\n  handleEmailInput: function(event){\r\n    this.setState({\r\n      email: event.target.value\r\n    });\r\n  },\r\n\r\n  validateEmail: function (event) {\r\n    // regex from http://stackoverflow.com/questions/46155/validate-email-address-in-javascript\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(event);\r\n  },\r\n\r\n  isEmpty: function (value) {\r\n    return !_.isEmpty(value);\r\n  },\r\n\r\n  updateStatesValue: function (value) {\r\n    this.setState({\r\n      statesValue: value\r\n    })\r\n  },\r\n\r\n  render: function() {\r\n    return (\r\n      <div className=\"create_account_screen\">\r\n\r\n        <div className=\"create_account_form\">\r\n          <h1>Create account</h1>\r\n          <p>Example of form validation built with React.</p>\r\n          <form onSubmit={this.saveAndContinue}>\r\n\r\n            <Input \r\n              text=\"Email Address\" \r\n              ref=\"email\"\r\n              type=\"text\"\r\n              defaultValue={this.state.email} \r\n              validate={this.validateEmail}\r\n              value={this.state.email}\r\n              onChange={this.handleEmailInput} \r\n              errorMessage=\"Email is invalid\"\r\n              emptyMessage=\"Email can't be empty\"\r\n              errorVisible={this.state.showEmailError}\r\n            />\r\n\r\n            <Input \r\n              text=\"Company Name\" \r\n              ref=\"companyName\"\r\n              validate={this.isEmpty}\r\n              value={this.state.companyName}\r\n              onChange={this.handleCompanyInput} \r\n              emptyMessage=\"Company name can't be empty\"\r\n            /> \r\n\r\n            <Input \r\n              text=\"Password\" \r\n              type=\"password\"\r\n              ref=\"password\"\r\n              validator=\"true\"\r\n              minCharacters=\"8\"\r\n              requireCapitals=\"1\"\r\n              requireNumbers=\"1\"\r\n              forbiddenWords={this.state.forbiddenWords}\r\n              value={this.state.passsword}\r\n              emptyMessage=\"Password is invalid\"\r\n              onChange={this.handlePasswordInput} \r\n            /> \r\n\r\n            <Input \r\n              text=\"Confirm password\" \r\n              ref=\"passwordConfirm\"\r\n              type=\"password\"\r\n              validate={this.isConfirmedPassword}\r\n              value={this.state.confirmPassword}\r\n              onChange={this.handleConfirmPasswordInput} \r\n              emptyMessage=\"Please confirm your password\"\r\n              errorMessage=\"Passwords don't match\"\r\n            /> \r\n\r\n            <Select \r\n              options={STATES} \r\n              ref=\"state\"\r\n              value={this.state.statesValue} \r\n              onChange={this.updateStatesValue} \r\n              searchable={this.props.searchable} \r\n              emptyMessage=\"Please select state\"\r\n              errorMessage=\"Please select state\"\r\n              placeholder=\"Choose Your State\"\r\n              placeholderTitle=\"Your State\"\r\n            />\r\n\r\n            <button \r\n              type=\"submit\" \r\n              className=\"button button_wide\">\r\n              CREATE ACCOUNT\r\n            </button>\r\n\r\n          </form>\r\n\r\n           <a href=\"https://github.com/mikepro4/react-signup-form\" target=\"_blank\" className=\"github_link\" title=\"View Source Code\"> \r\n              <Icon type=\"guthub\" />\r\n          </a>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n    \r\n});\r\n    \r\nmodule.exports = CreateAccountScreen;"]},"metadata":{},"sourceType":"module"}