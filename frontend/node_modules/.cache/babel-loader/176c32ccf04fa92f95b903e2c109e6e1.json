{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\apiset2\\\\frontend\\\\src\\\\Components\\\\Registration.js\";\nimport React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(7),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n/*export default function Registration() {\r\n  const classes = useStyles();\r\n  const [firstLoad, setLoad] = React.useState(true);\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date(\"1998-04-02T21:11:54\")\r\n  );\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [department, setDepartment] = React.useState(\"\");\r\n  const [gender, setGender] = React.useState(\"\");\r\n\r\n  const handleDateChange = date => setSelectedDate(date.target.value);\r\n  const handleUserNameChange = event => setUserName(event.target.value);\r\n  const handlDepartmentChange = event => setDepartment(event.target.value);\r\n  const handleGenderChange = event => setGender(event.target.value);\r\n\r\n  const [message, setMessage] = React.useState(\"Nothing saved in the session\");\r\n\r\n  async function sampleFunc(toInput) {\r\n    const response = await fetch(\"/api/employee\", {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n      body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n    let body = await response.json();\r\n    console.log(body.id);\r\n    setMessage(body.id ? \"Data sucessfully updated\" : \"Data updation failed\");\r\n  }\r\n\r\n  const handleSubmit = variables => {\r\n    const toInput = { userName, department, gender, dob: selectedDate };\r\n    sampleFunc(toInput);\r\n    setUserName(\"\");\r\n    setDepartment(\"\");\r\n    setGender(\"\");\r\n  };\r\n\r\n  if (firstLoad) {\r\n    // sampleFunc();\r\n    setLoad(false);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <GroupIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register as Donor or Charity\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"userName\"\r\n                value={userName}\r\n                label=\"UserName\"\r\n                userName=\"userName\"\r\n                autoComplete=\"userName\"\r\n                onChange={handleUserNameChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"department\"\r\n                name=\"department\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={department}\r\n                id=\"department\"\r\n                label=\"Department\"\r\n                onChange={handlDepartmentChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"gender\"\r\n                value={gender}\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                autoComplete=\"gender\"\r\n                onChange={handleGenderChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date of birth\"\r\n                type=\"date\"\r\n                defaultValue=\"1998-04-02\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                onChange={handleDateChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n             type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            preventDefault\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Register\r\n          </Button>\r\n\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Typography style={{ margin: 7 }} variant=\"body1\">\r\n          Status: {message}\r\n        </Typography>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\n*/\n\nexport default function Registration(props) {\n  const handleSubmitClick = e => {\n    e.preventDefault();\n\n    if (state.password === state.confirmPassword) {\n      sendDetailsToServer();\n    } else {\n      props.showError('Passwords do not match');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card col-12 col-lg-4 login-card mt-2 hv-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: handleSubmitClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Register\"));\n}","map":{"version":3,"sources":["C:/Project/apiset2/frontend/src/Components/Registration.js"],"names":["React","Avatar","Button","CssBaseline","TextField","Link","Grid","GroupIcon","Typography","makeStyles","Container","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","textField","marginLeft","marginRight","Registration","props","handleSubmitClick","e","preventDefault","state","password","confirmPassword","sendDetailsToServer","showError"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GAD8B;AAOrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENM,IAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBC;AAFnC,GAP6B;AAWrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfZ,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAX+B;AAerCY,EAAAA,MAAM,EAAE;AACNP,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF,GAf6B;AAkBrCa,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEjB,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAETe,IAAAA,WAAW,EAAElB,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ;AAGTW,IAAAA,KAAK,EAAE;AAHE;AAlB0B,CAAL,CAAN,CAA5B;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA,eAAe,SAASK,YAAT,CAAsBC,KAAtB,EAA6B;AAExC,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGC,KAAK,CAACC,QAAN,KAAmBD,KAAK,CAACE,eAA5B,EAA6C;AACzCC,MAAAA,mBAAmB;AACtB,KAFD,MAEO;AACHP,MAAAA,KAAK,CAACQ,SAAN,CAAgB,wBAAhB;AACH;AACJ,GAPL;;AAQA,SACQ;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACU,IAAA,IAAI,EAAC,QADf;AAEU,IAAA,SAAS,EAAC,iBAFpB;AAGU,IAAA,OAAO,EAAEP,iBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADR;AAYC","sourcesContent":["import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\n/*export default function Registration() {\r\n  const classes = useStyles();\r\n  const [firstLoad, setLoad] = React.useState(true);\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date(\"1998-04-02T21:11:54\")\r\n  );\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [department, setDepartment] = React.useState(\"\");\r\n  const [gender, setGender] = React.useState(\"\");\r\n\r\n  const handleDateChange = date => setSelectedDate(date.target.value);\r\n  const handleUserNameChange = event => setUserName(event.target.value);\r\n  const handlDepartmentChange = event => setDepartment(event.target.value);\r\n  const handleGenderChange = event => setGender(event.target.value);\r\n\r\n  const [message, setMessage] = React.useState(\"Nothing saved in the session\");\r\n\r\n  async function sampleFunc(toInput) {\r\n    const response = await fetch(\"/api/employee\", {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n      body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n    let body = await response.json();\r\n    console.log(body.id);\r\n    setMessage(body.id ? \"Data sucessfully updated\" : \"Data updation failed\");\r\n  }\r\n\r\n  const handleSubmit = variables => {\r\n    const toInput = { userName, department, gender, dob: selectedDate };\r\n    sampleFunc(toInput);\r\n    setUserName(\"\");\r\n    setDepartment(\"\");\r\n    setGender(\"\");\r\n  };\r\n\r\n  if (firstLoad) {\r\n    // sampleFunc();\r\n    setLoad(false);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <GroupIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register as Donor or Charity\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"userName\"\r\n                value={userName}\r\n                label=\"UserName\"\r\n                userName=\"userName\"\r\n                autoComplete=\"userName\"\r\n                onChange={handleUserNameChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"department\"\r\n                name=\"department\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={department}\r\n                id=\"department\"\r\n                label=\"Department\"\r\n                onChange={handlDepartmentChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"gender\"\r\n                value={gender}\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                autoComplete=\"gender\"\r\n                onChange={handleGenderChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date of birth\"\r\n                type=\"date\"\r\n                defaultValue=\"1998-04-02\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                onChange={handleDateChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n             type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            preventDefault\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Register\r\n          </Button>\r\n\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Typography style={{ margin: 7 }} variant=\"body1\">\r\n          Status: {message}\r\n        </Typography>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\n*/\r\n\r\nexport default function Registration(props) {\r\n\r\n    const handleSubmitClick = (e) => {\r\n            e.preventDefault();\r\n            if(state.password === state.confirmPassword) {\r\n                sendDetailsToServer()    \r\n            } else {\r\n                props.showError('Passwords do not match');\r\n            }\r\n        }\r\n    return(\r\n            <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\r\n\r\n              <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn-primary\"\r\n                        onClick={handleSubmitClick}\r\n              >\r\n                        Register\r\n              </button>\r\n            </div>\r\n      )\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}