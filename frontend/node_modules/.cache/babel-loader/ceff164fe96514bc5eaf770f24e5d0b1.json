{"ast":null,"code":"import _slicedToArray from \"C:\\\\Project\\\\apiset2\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\apiset2\\\\frontend\\\\src\\\\Components\\\\AdminPaymentPending.js\";\nimport NavBarAdmin from './NavBarAdmin';\nimport React, { Component } from \"react\"; //import AddEmployee from \"./Components/AddEmployee\";\n\nimport { Route, BrowserRouter as Router } from \"react-router-dom\"; //import Table from \"./Components/Table\";\n//import App from './App';\n//import background from './charitybackground.jfif';\n\nimport ReactDOM from 'react-dom';\nimport Recipients from \"../Components/Recipients\";\nimport Footer from '../Footer';\nimport Home from '../Home';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap';\nimport isFirstDayOfMonth from 'date-fns/isFirstDayOfMonth/index.js';\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 600\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: `10px`,\n    height: \"100%\",\n    width: \"99%\",\n    marginTop: theme.spacing(7)\n  },\n  link: {\n    color: \"rgba(0,0,0,0.65)\",\n    textDecoration: \"none\",\n    marginLeft: \"10%\",\n    alignSelf: \"flex-start\",\n    \"&:hover\": {\n      color: \"rgba(0,0,0,1)\"\n    }\n  }\n}));\n\nfunction ProcessedPaymentsList() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        recipients = _React$useState2[0],\n        upDateRecipients = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        details = _React$useState4[0],\n        upDateDetails = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        name = _React$useState6[0],\n        upDateName = _React$useState6[1];\n\n  const _React$useState7 = React.useState([]),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        donations = _React$useState8[0],\n        upDateDonations = _React$useState8[1];\n\n  const _React$useState9 = React.useState(true),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        firstLoad = _React$useState10[0],\n        setLoad = _React$useState10[1];\n\n  const _React$useState11 = React.useState([]),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        amount = _React$useState12[0],\n        setAmount = _React$useState12[1];\n\n  const _React$useState13 = React.useState([]),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        recipientid = _React$useState14[0],\n        upDateRecipientId = _React$useState14[1];\n\n  const _React$useState15 = React.useState([]),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        donorid = _React$useState16[0],\n        upDateDonorId = _React$useState16[1];\n\n  const _React$useState17 = React.useState(false),\n        _React$useState18 = _slicedToArray(_React$useState17, 2),\n        donate = _React$useState18[0],\n        setDonation = _React$useState18[1];\n\n  const _React$useState19 = React.useState(true),\n        _React$useState20 = _slicedToArray(_React$useState19, 2),\n        giftAid = _React$useState20[0],\n        setGiftAid = _React$useState20[1];\n\n  const _React$useState21 = React.useState(true),\n        _React$useState22 = _slicedToArray(_React$useState21, 2),\n        anonymity = _React$useState22[0],\n        setAnonymity = _React$useState22[1];\n\n  const _React$useState23 = React.useState(true),\n        _React$useState24 = _slicedToArray(_React$useState23, 2),\n        isSelected = _React$useState24[0],\n        updateSelected = _React$useState24[1];\n\n  const _React$useState25 = React.useState(true),\n        _React$useState26 = _slicedToArray(_React$useState25, 2),\n        isSelected1 = _React$useState26[0],\n        updateSelected1 = _React$useState26[1];\n\n  const _React$useState27 = React.useState([]),\n        _React$useState28 = _slicedToArray(_React$useState27, 2),\n        message = _React$useState28[0],\n        setMessage = _React$useState28[1];\n\n  const _React$useState29 = React.useState([]),\n        _React$useState30 = _slicedToArray(_React$useState29, 2),\n        userid = _React$useState30[0],\n        UpdateUserId = _React$useState30[1];\n\n  const _React$useState31 = React.useState([JSON.parse(localStorage.getItem('user'))]),\n        _React$useState32 = _slicedToArray(_React$useState31, 2),\n        userData = _React$useState32[0],\n        UpdateUserData = _React$useState32[1];\n\n  const _React$useState33 = React.useState([]),\n        _React$useState34 = _slicedToArray(_React$useState33, 2),\n        nameData = _React$useState34[0],\n        updateNameData = _React$useState34[1];\n\n  const _React$useState35 = React.useState([]),\n        _React$useState36 = _slicedToArray(_React$useState35, 2),\n        unprocessedPayments = _React$useState36[0],\n        updateUnprocessed = _React$useState36[1];\n\n  let isLoading = true;\n  console.log(userData);\n\n  async function getUnproccessedPayments() {\n    let responsePayments = await fetch('api/donationsrecords/unprocessed');\n    let paymentsbody = await responsePayments.json();\n    console.log(paymentsbody);\n    updateUnprocessed(paymentsbody);\n  }\n\n  async function updateDonation(toInput) {\n    const response = await fetch(\"/api/donations/update\", {\n      method: \"PUT\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n    });\n  }\n\n  function processPayment(e) {\n    e.preventDefault();\n    let processrequest = {\n      pk_donation_id: e.target.value,\n      processed: true\n    };\n    console.log(processrequest);\n    updateDonation(processrequest);\n    setMessage(\"Donation id \" + e.target.value + \" processed, please refresh page\");\n  }\n\n  if (firstLoad) {\n    getUnproccessedPayments();\n    setLoad(false);\n  }\n\n  if (unprocessedPayments.length > 0) isLoading = false;\n\n  function onChange(e) {\n    setAmount(e.target.value);\n    console.log(e.target.value);\n  }\n\n  function giftaidChange(e) {\n    if (isSelected) {\n      updateSelected(false);\n      setGiftAid(false);\n    } else {\n      updateSelected(true);\n      setGiftAid(true);\n    }\n  }\n\n  function anonymityChange(e) {\n    if (isSelected1) {\n      updateSelected1(false);\n      setAnonymity(\"full\");\n    } else {\n      updateSelected1(true);\n      setAnonymity(\"none\");\n    }\n  }\n\n  function printDocument() {\n    window.print();\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, isLoading ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"No payments pending\") : React.createElement(TableContainer, {\n    style: {\n      width: \"80%\",\n      margin: \"0 10px\"\n    },\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Antos Charity Management\"), React.createElement(\"h4\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Pending Payments\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Donor Name\")), React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Donor Sort Code\")), React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Donor Acccount Number\")), React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Recipient Name\")), React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Recipient Sort Code\")), React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Recipient Acccount Number\")), React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Donation Amount\")), React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Donation Date\")))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, unprocessedPayments === null || unprocessedPayments === void 0 ? void 0 : unprocessedPayments.map(unprocessedPayments => React.createElement(TableRow, {\n    key: unprocessedPayments.pk_donation_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, unprocessedPayments.donorname === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }) : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, unprocessedPayments.donorname), unprocessedPayments.donorsortcode === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }) : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, unprocessedPayments.donorsortcode), unprocessedPayments.donoraccountnumber === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Yes\") : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, unprocessedPayments.donoraccountnumber), unprocessedPayments.recipientname === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }) : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, unprocessedPayments.recipientname), unprocessedPayments.recipientsortcode === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }) : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, unprocessedPayments.recipientsortcode), unprocessedPayments.recipientaccountnumber === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Yes\") : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, unprocessedPayments.recipientaccountnumber), unprocessedPayments.donation_amount === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Yes\") : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, unprocessedPayments.donation_amount), unprocessedPayments.donation_datetime === null ? React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Yes\") : React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, unprocessedPayments.donation_datetime), React.createElement(TableCell, {\n    align: \"centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success\",\n    value: unprocessedPayments.pk_donation_id,\n    onClick: processPayment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Mark Processed\")), message))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }));\n}\n\nclass AdminPaymentPending extends React.Component {\n  constructor(props) {\n    super(props);\n    this.userData = JSON.parse(localStorage.getItem('user'));\n    this.state = {\n      currentPage: \"DonorStatement\",\n      userid: this.userData.userid,\n      username: this.userData.username,\n      usertype: this.userData.usertype\n    };\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.usertype == 0) {\n      return React.createElement(React.Fragment, null, React.createElement(NavBarAdmin, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(ProcessedPaymentsList, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Users must be logged in with appropriate user type to view this page \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Please login at this link\")));\n  }\n\n}\n\nReactDOM.render(React.createElement(AdminPaymentPending, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 256\n  },\n  __self: this\n}), document.getElementById('root'));\nexport default AdminPaymentPending;","map":{"version":3,"sources":["C:/Project/apiset2/frontend/src/Components/AdminPaymentPending.js"],"names":["NavBarAdmin","React","Component","Route","BrowserRouter","Router","ReactDOM","Recipients","Footer","Home","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Avatar","GroupIcon","Link","Typography","CircularProgress","Navbar","Nav","NavDropdown","Form","FormControl","Button","Container","isFirstDayOfMonth","useStyles","theme","table","minWidth","avatar","margin","spacing","backgroundColor","palette","secondary","main","paper","display","flexDirection","justifyContent","alignItems","height","width","marginTop","link","color","textDecoration","marginLeft","alignSelf","ProcessedPaymentsList","classes","useState","recipients","upDateRecipients","details","upDateDetails","name","upDateName","donations","upDateDonations","firstLoad","setLoad","amount","setAmount","recipientid","upDateRecipientId","donorid","upDateDonorId","donate","setDonation","giftAid","setGiftAid","anonymity","setAnonymity","isSelected","updateSelected","isSelected1","updateSelected1","message","setMessage","userid","UpdateUserId","JSON","parse","localStorage","getItem","userData","UpdateUserData","nameData","updateNameData","unprocessedPayments","updateUnprocessed","isLoading","console","log","getUnproccessedPayments","responsePayments","fetch","paymentsbody","json","updateDonation","toInput","response","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","stringify","processPayment","e","preventDefault","processrequest","pk_donation_id","target","value","processed","length","onChange","giftaidChange","anonymityChange","printDocument","window","print","map","donorname","donorsortcode","donoraccountnumber","recipientname","recipientsortcode","recipientaccountnumber","donation_amount","donation_datetime","AdminPaymentPending","constructor","props","state","currentPage","username","usertype","render","document","getElementById"],"mappings":"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","sourcesContent":["import NavBarAdmin from './NavBarAdmin';\r\nimport React, { Component } from \"react\";\r\n//import AddEmployee from \"./Components/AddEmployee\";\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\n//import Table from \"./Components/Table\";\r\n//import App from './App';\r\n//import background from './charitybackground.jfif';\r\nimport ReactDOM from 'react-dom';\r\nimport Recipients from \"../Components/Recipients\";\r\nimport Footer from '../Footer';\r\nimport Home from '../Home';\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap'\r\nimport isFirstDayOfMonth from 'date-fns/isFirstDayOfMonth/index.js';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 600\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: `10px`,\r\n    height: \"100%\",\r\n    width: \"99%\",\r\n    marginTop: theme.spacing(7)\r\n  },\r\n  link: {\r\n    color: \"rgba(0,0,0,0.65)\",\r\n    textDecoration: \"none\",\r\n    marginLeft: \"10%\",\r\n    alignSelf: \"flex-start\",\r\n    \"&:hover\": {\r\n      color: \"rgba(0,0,0,1)\"\r\n    }\r\n  }\r\n}));\r\n\r\nfunction ProcessedPaymentsList() {\r\n\r\n    const classes = useStyles();\r\n  \r\n    const [recipients, upDateRecipients] = React.useState([]);\r\n    const [details, upDateDetails] = React.useState([]);\r\n    const [name, upDateName] = React.useState([]);\r\n    const [donations, upDateDonations] = React.useState([]);\r\n    const [firstLoad, setLoad] = React.useState(true);\r\n    const [amount, setAmount] = React.useState([]);\r\n    const [recipientid, upDateRecipientId] = React.useState([]);\r\n    const [donorid, upDateDonorId] = React.useState([])\r\n    const [donate, setDonation] = React.useState(false);\r\n    const [giftAid, setGiftAid] = React.useState(true);\r\n    const [anonymity, setAnonymity] = React.useState(true);\r\n    const [isSelected, updateSelected] = React.useState(true);\r\n    const [isSelected1, updateSelected1] = React.useState(true);\r\n    const [message, setMessage] = React.useState([]);\r\n    const [userid, UpdateUserId] = React.useState([]);\r\n    const [userData, UpdateUserData] = React.useState([JSON.parse(localStorage.getItem('user'))]);\r\n    const [nameData, updateNameData] = React.useState([]);\r\n    const [unprocessedPayments, updateUnprocessed] = React.useState([]);\r\n    let isLoading = true;\r\n    console.log(userData)\r\n  \r\n  \r\n    async function getUnproccessedPayments() {\r\n      let responsePayments = await fetch('api/donationsrecords/unprocessed');\r\n      let paymentsbody = await responsePayments.json();\r\n      console.log(paymentsbody)\r\n      updateUnprocessed(paymentsbody);\r\n    }\r\n  \r\n    async function updateDonation(toInput) {\r\n        const response = await fetch(\"/api/donations/update\", {\r\n            method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n            body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n        });\r\n    }\r\n\r\n    \r\n    function processPayment(e) {\r\n        e.preventDefault();\r\n        let processrequest = {\r\n            pk_donation_id: e.target.value,\r\n            processed: true\r\n        };\r\n        console.log(processrequest)\r\n        updateDonation(processrequest)\r\n        setMessage(\"Donation id \" + e.target.value + \" processed, please refresh page\")\r\n    }\r\n  \r\n  \r\n    if (firstLoad) {\r\n      getUnproccessedPayments();\r\n      setLoad(false);\r\n    }\r\n  \r\n    if (unprocessedPayments.length > 0) isLoading = false;\r\n  \r\n    function onChange(e) {\r\n      setAmount(e.target.value)\r\n      console.log(e.target.value)\r\n    }\r\n  \r\n  \r\n    function giftaidChange(e) {\r\n      if (isSelected) {\r\n        updateSelected(false)\r\n        setGiftAid(false)\r\n      }\r\n      else {\r\n        updateSelected(true)\r\n        setGiftAid(true)\r\n      }\r\n    }\r\n  \r\n    function anonymityChange(e) {\r\n      if (isSelected1) {\r\n        updateSelected1(false)\r\n        setAnonymity(\"full\")\r\n      }\r\n      else {\r\n        updateSelected1(true)\r\n        setAnonymity(\"none\")\r\n      }\r\n    }\r\n  \r\n  \r\n    \r\n    function printDocument() {\r\n      window.print()\r\n    }\r\n  \r\n  \r\n  \r\n    return (\r\n      <div className={classes.paper}>\r\n  \r\n  \r\n        {isLoading ? (\r\n          <h2>No payments pending</h2>\r\n        ) : (\r\n          <TableContainer\r\n            style={{ width: \"80%\", margin: \"0 10px\" }}\r\n            component={Paper}\r\n          >\r\n            <h3 className={classes.paper}>Antos Charity Management</h3>\r\n            <h4 className={classes.paper}>Pending Payments</h4>\r\n            <br></br>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"centre\"><b>Donor Name</b></TableCell>\r\n                  <TableCell align=\"centre\"><b>Donor Sort Code</b></TableCell>\r\n                  <TableCell align=\"centre\"><b>Donor Acccount Number</b></TableCell>\r\n                  <TableCell align=\"centre\"><b>Recipient Name</b></TableCell>\r\n                  <TableCell align=\"centre\"><b>Recipient Sort Code</b></TableCell>\r\n                  <TableCell align=\"centre\"><b>Recipient Acccount Number</b></TableCell>\r\n                  <TableCell align=\"centre\"><b>Donation Amount</b></TableCell>\r\n                  <TableCell align=\"centre\"><b>Donation Date</b></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {unprocessedPayments?.map(unprocessedPayments =>\r\n                  <TableRow key={unprocessedPayments.pk_donation_id}>\r\n                    {unprocessedPayments.donorname === null ? <TableCell align=\"centre\"></TableCell> : <TableCell align=\"centre\">{unprocessedPayments.donorname}</TableCell>}\r\n                    {unprocessedPayments.donorsortcode === null ? <TableCell align=\"centre\"></TableCell> : <TableCell align=\"centre\">{unprocessedPayments.donorsortcode}</TableCell>}\r\n                    {unprocessedPayments.donoraccountnumber === null ? <TableCell align=\"centre\">Yes</TableCell> : <TableCell align=\"centre\">{unprocessedPayments.donoraccountnumber}</TableCell>}\r\n                    {unprocessedPayments.recipientname === null ? <TableCell align=\"centre\"></TableCell> : <TableCell align=\"centre\">{unprocessedPayments.recipientname}</TableCell>}\r\n                    {unprocessedPayments.recipientsortcode === null ? <TableCell align=\"centre\"></TableCell> : <TableCell align=\"centre\">{unprocessedPayments.recipientsortcode}</TableCell>}\r\n                    {unprocessedPayments.recipientaccountnumber === null ? <TableCell align=\"centre\">Yes</TableCell> : <TableCell align=\"centre\">{unprocessedPayments.recipientaccountnumber}</TableCell>}\r\n                    {unprocessedPayments.donation_amount === null ? <TableCell align=\"centre\">Yes</TableCell> : <TableCell align=\"centre\">{unprocessedPayments.donation_amount}</TableCell>}\r\n                    {unprocessedPayments.donation_datetime === null ? <TableCell align=\"centre\">Yes</TableCell> : <TableCell align=\"centre\">{unprocessedPayments.donation_datetime}</TableCell>}\r\n                    <TableCell align=\"centre\" ><Button variant=\"success\"  value={unprocessedPayments.pk_donation_id} onClick={processPayment} >Mark Processed</Button></TableCell>\r\n                    {message}\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n\r\nclass AdminPaymentPending extends React.Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.userData = JSON.parse(localStorage.getItem('user'));\r\n    this.state = {\r\n      currentPage: \"DonorStatement\",\r\n      userid: this.userData.userid,\r\n      username: this.userData.username,\r\n      usertype: this.userData.usertype\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(this.state)\r\n    if (this.state.usertype == 0) {\r\n      return (\r\n        <>\r\n          <NavBarAdmin data={this.state} />\r\n          <ProcessedPaymentsList data={this.state} />\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>Users must be logged in with appropriate user type to view this page </h2>\r\n        </div>\r\n        <div>\r\n          <Nav.Link href=\"/login\">Please login at this link</Nav.Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <AdminPaymentPending />,\r\n  document.getElementById('root')\r\n);\r\n\r\nexport default AdminPaymentPending;"]},"metadata":{},"sourceType":"module"}