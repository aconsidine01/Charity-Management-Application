{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\apiset2\\\\frontend\\\\src\\\\Components\\\\Register.js\";\nimport TopNavBar from '../TopNavBar';\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Footer from '../Footer';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(7),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach( // if we have an error string set valid to false\n  val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nasync function userAdd(toInput) {\n  const response = await fetch(\"/api/user/insert\", {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  });\n  let newuser = await response.json();\n  console.log(newuser.pk_user_id);\n  let userid = newuser.pk_user_id;\n  return userid;\n}\n\nasync function detailsAdd(toInput) {\n  const response = await fetch(\"/api/details/insert\", {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  });\n  let newdetails = await response.json();\n  let newdetailsid = newdetails.pk_details_id;\n  return newdetailsid;\n}\n\nasync function donorAdd(toInput) {\n  const response = await fetch(\"/api/donors/insert\", {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  });\n}\n\nasync function recipientAdd(toInput) {\n  const response = await fetch(\"/api/recipients/insert\", {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  });\n}\n\nasync function nameAdd(toInput) {\n  const response = await fetch(\"/api/name/insert\", {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  });\n}\n\nasync function addressAdd(toInput) {\n  const response = await fetch(\"/api/address/insert\", {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  });\n}\n\nasync function sendRegistrationEmail() {\n  const response = await fetch('/email/' + this.state.email + '/pending', {\n    method: \"GET\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n\n  });\n  console.log(this.state.email);\n}\n\nclass AddUserComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateUser = e => {\n      e.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        console.log('Valid Form');\n      } else {\n        console.log('Invalid Input');\n      }\n    };\n\n    this.saveUser = e => {\n      e.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        let user = {\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email,\n          reg_approval: \"pending\",\n          user_type: this.state.user_type\n        };\n        userAdd(user).then(res => {\n          console.log(res);\n          this.setState({\n            userid: res\n          });\n          console.log(this.state.userid);\n          let details = {\n            fk_user_id: this.state.userid,\n            user_statement: this.state.userstatement\n          };\n          detailsAdd(details).then(res => {\n            console.log(res);\n          });\n          let name = {\n            fk_user_id: this.state.userid\n          };\n          nameAdd(name);\n          let address = {\n            fk_user_id: this.state.userid\n          };\n          addressAdd(address);\n          this.setState({\n            user_added: 1\n          });\n          console.log(this.state.user_type);\n          let donor = {\n            fk_user_id: this.state.userid,\n            privacy_level: \"full\"\n          };\n          let recipient = {\n            fk_user_id: this.state.userid\n          };\n          {\n            this.state.user_type == 1 ? donorAdd(donor) : recipientAdd(recipient);\n          }\n        });\n      } else {\n        console.log('Invalid Input');\n      }\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      console.log(name + value);\n      let errors = this.state.errors;\n      const _this$state = this.state,\n            users = _this$state.users,\n            isLoading = _this$state.isLoading;\n\n      switch (name) {\n        case 'username':\n          errors.username = value.length < 5 ? 'Username must be at least 5 characters long!' : '';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email must be valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be at least 8 characters long!' : '';\n          break;\n\n        case 'confirmpassword':\n          errors.password = value === this.state.password ? '' : 'Passwords do not match!';\n          break;\n\n        case 'user_type':\n          errors.user_type = value.length === 0 ? 'Please select a user type' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      if (name === 'username') {\n        {\n          users.map(users => {\n            value === users.username && (errors.username = 'Username already in use, please choose another');\n          });\n        }\n      }\n\n      if (name === 'email') {\n        {\n          users.map(users => {\n            value === users.email && (errors.email = 'Email already in use, please choose another');\n          });\n        }\n      }\n\n      this.setState({\n        errors,\n        [e.target.name]: e.target.value\n      }, () => {\n        console.log(errors);\n        console.log(errors.username);\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      confirmpassword: '',\n      email: '',\n      message: null,\n      userid: '',\n      userstatement: null,\n      user_type: null,\n      user_added: 0,\n      errors: {\n        username: '',\n        email: '',\n        password: '',\n        user_type: ''\n      }\n    };\n    this.saveUser = this.saveUser.bind(this);\n  }\n  /*\r\n  setStateAsync(state) {\r\n      return new Promise((resolve) => {\r\n          this.setState(state, resolve)\r\n      });\r\n  }\r\n  */\n  //get userlist\n\n\n  async componentDidMount() {\n    const response = await fetch('/api/user/');\n    const body = await response.json();\n    this.setState({\n      users: body,\n      isLoading: false\n    });\n  }\n\n  // set user details to session storage\n  componentWillUpdate(nextProps, nextState) {\n    sessionStorage.setItem('user', JSON.stringify(nextState));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Register as Donor or Charity\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"User Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      name: \"username\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      name: \"password\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Confirm Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      name: \"confirmpassword\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.confirmpassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"email\",\n      name: \"email\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"User Statement:\"), React.createElement(\"input\", {\n      type: \"textarea\",\n      placeholder: \"User Statement\",\n      name: \"userstatement\",\n      className: \"form-control\",\n      value: this.state.userstatement,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Charity \\xA0\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"charity\",\n      name: \"user_type\",\n      value: \"2\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"\\xA0 Donor \\xA0\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"donor\",\n      name: \"user_type\",\n      value: \"1\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    })), !this.state.user_added == 1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-success btn-block\",\n      onClick: this.saveUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, this.state.errors.username), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, this.state.errors.email), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, this.state.errors.password)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Registration has been received\"), React.createElement(Nav.Link, {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Please login\")))));\n  }\n\n}\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: \"Register\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(TopNavBar, {\n      data: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), React.createElement(AddUserComponent, {\n      data: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Register, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 403\n  },\n  __self: this\n}), document.getElementById('root'));\nexport default Register;","map":{"version":3,"sources":["C:/Project/apiset2/frontend/src/Components/Register.js"],"names":["TopNavBar","React","Component","ReactDOM","Footer","makeStyles","Nav","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","textField","marginLeft","marginRight","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","userAdd","toInput","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","newuser","json","console","log","pk_user_id","userid","detailsAdd","newdetails","newdetailsid","pk_details_id","donorAdd","recipientAdd","nameAdd","addressAdd","sendRegistrationEmail","state","email","AddUserComponent","constructor","props","validateUser","e","preventDefault","saveUser","user","username","password","reg_approval","user_type","then","res","setState","details","fk_user_id","user_statement","userstatement","name","address","user_added","donor","privacy_level","recipient","onChange","target","value","handleChange","users","isLoading","test","map","confirmpassword","message","bind","componentDidMount","componentWillUpdate","nextProps","nextState","sessionStorage","setItem","render","Register","currentPage","document","getElementById"],"mappings":"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","sourcesContent":["import TopNavBar from '../TopNavBar';\r\nimport React, { Component } from \"react\";\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Footer from '../Footer';\r\n\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Nav} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(7),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst validEmailRegex = \r\n  RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n\r\n  const validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n      // if we have an error string set valid to false\r\n      (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n  }\r\n\r\nasync function userAdd(toInput) {\r\n\r\n\r\n    const response = await fetch(\"/api/user/insert\", {\r\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n    let newuser = await response.json();\r\n    console.log(newuser.pk_user_id);\r\n    let userid = newuser.pk_user_id;\r\n    return userid;\r\n}\r\n\r\nasync function detailsAdd(toInput) {\r\n    const response = await fetch(\"/api/details/insert\", {\r\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n    let newdetails = await response.json();\r\n    let newdetailsid = newdetails.pk_details_id;\r\n    return newdetailsid;\r\n}\r\n\r\nasync function donorAdd(toInput) {\r\n    const response = await fetch(\"/api/donors/insert\", {\r\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n}\r\n\r\nasync function recipientAdd(toInput) {\r\n    const response = await fetch(\"/api/recipients/insert\", {\r\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n}\r\n\r\nasync function nameAdd(toInput) {\r\n    const response = await fetch(\"/api/name/insert\", {\r\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n}\r\n\r\nasync function addressAdd(toInput) {\r\n    const response = await fetch(\"/api/address/insert\", {\r\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n}\r\n\r\nasync function sendRegistrationEmail() {\r\n    const response = await fetch('/email/' + this.state.email + '/pending', {\r\n        method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\r\n    });\r\n    console.log(this.state.email)\r\n}\r\n\r\n\r\nclass AddUserComponent extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            email: '',\r\n            message: null,\r\n            userid: '',\r\n            userstatement: null,\r\n            user_type: null,\r\n            user_added: 0,\r\n            errors: {\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n                user_type: ''\r\n              }\r\n        }\r\n        this.saveUser = this.saveUser.bind(this);\r\n    }\r\n\r\n    /*\r\n    setStateAsync(state) {\r\n        return new Promise((resolve) => {\r\n            this.setState(state, resolve)\r\n        });\r\n    }\r\n    */\r\n\r\n    //get userlist\r\nasync componentDidMount() {\r\n\r\n    const response = await fetch('/api/user/');\r\n    const body = await response.json();\r\n    this.setState({ users: body, isLoading: false });\r\n  }\r\n\r\n    validateUser = (e) => {\r\n        e.preventDefault();\r\n        if(validateForm(this.state.errors)) {\r\n          console.log('Valid Form')\r\n        }else{\r\n          console.log('Invalid Input')\r\n        }\r\n    }\r\n\r\n    saveUser = (e) => {\r\n        e.preventDefault();\r\n        if(validateForm(this.state.errors)) {\r\n            let user = {\r\n                username: this.state.username, password: this.state.password, email: this.state.email, reg_approval: \"pending\", user_type: this.state.user_type\r\n            };\r\n            userAdd(user).then(res => {\r\n                console.log(res)\r\n                this.setState({ userid: res })\r\n                console.log(this.state.userid)\r\n                let details = { fk_user_id: this.state.userid, user_statement: this.state.userstatement }\r\n                detailsAdd(details).then(res => {\r\n                    console.log(res)\r\n                });\r\n                let name = { fk_user_id: this.state.userid}\r\n                nameAdd(name)\r\n                let address = { fk_user_id: this.state.userid}\r\n                addressAdd(address)\r\n                this.setState({ user_added: 1 })\r\n                console.log(this.state.user_type)\r\n                let donor = {fk_user_id: this.state.userid, privacy_level: \"full\"}\r\n                let recipient = {fk_user_id: this.state.userid}\r\n                {this.state.user_type==1? donorAdd(donor): recipientAdd(recipient)}\r\n\r\n            });\r\n          }else{\r\n            console.log('Invalid Input')\r\n          }\r\n\r\n\r\n    }\r\n\r\n    onChange = (e) =>\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n    // set user details to session storage\r\n    componentWillUpdate(nextProps, nextState) {\r\n        sessionStorage.setItem('user', JSON.stringify(nextState));\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        console.log(name + value)\r\n        let errors = this.state.errors;\r\n        const { users, isLoading } = this.state;\r\n      \r\n        switch (name) {\r\n          case 'username': \r\n            errors.username = value.length < 5 ? 'Username must be at least 5 characters long!': '';\r\n            break;\r\n          case 'email': \r\n            errors.email = \r\n              validEmailRegex.test(value)\r\n                ? ''\r\n                : 'Email must be valid!';\r\n            break;\r\n          case 'password': \r\n            errors.password = \r\n              value.length < 8\r\n                ? 'Password must be at least 8 characters long!'\r\n                : '';\r\n            break;\r\n            case 'confirmpassword': \r\n            errors.password = \r\n              value === this.state.password\r\n                ? ''\r\n                : 'Passwords do not match!';\r\n            break;\r\n            case 'user_type': \r\n            errors.user_type = \r\n              value.length === 0\r\n                ? 'Please select a user type'\r\n                : '';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      \r\n        if(name==='username') {\r\n            {users.map(users =>   \r\n                {(value===users.username) && (errors.username = 'Username already in use, please choose another')}\r\n            )}\r\n        }\r\n        if(name==='email') {\r\n            {users.map(users =>   \r\n                {(value===users.email) && (errors.email = 'Email already in use, please choose another')}\r\n            )}\r\n        }\r\n\r\n        this.setState({errors, [e.target.name]: e.target.value}, ()=> {\r\n            console.log(errors)\r\n            console.log(errors.username)\r\n        })\r\n\r\n      }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Register as Donor or Charity</h2>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>User Name:</label>\r\n                        <input type=\"text\" placeholder=\"username\" name=\"username\" required className=\"form-control\" value={this.state.username} onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input type=\"password\" placeholder=\"password\" name=\"password\" required className=\"form-control\" value={this.state.password} onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Confirm Password:</label>\r\n                        <input type=\"password\" placeholder=\"password\" name=\"confirmpassword\" required className=\"form-control\" value={this.state.confirmpassword} onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input type=\"email\" placeholder=\"email\" name=\"email\" required className=\"form-control\" value={this.state.email} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>User Statement:</label>\r\n                        <input type=\"textarea\" placeholder=\"User Statement\" name=\"userstatement\" className=\"form-control\" value={this.state.userstatement} onChange={this.onChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Charity &nbsp;</label>\r\n                    <input type=\"radio\" id=\"charity\" name=\"user_type\" value=\"2\" onChange={this.onChange}/>\r\n                    <label>&nbsp; Donor &nbsp;</label>\r\n                    <input type=\"radio\" id=\"donor\" name=\"user_type\" value=\"1\" onChange={this.onChange}/>\r\n                    </div>\r\n                    {!this.state.user_added==1?\r\n                    <div>\r\n                    <button className=\"btn btn-primary btn-success btn-block\" onClick={this.saveUser}>Register</button>  \r\n                    <h2>{this.state.errors.username}</h2>\r\n                    <h2>{this.state.errors.email}</h2>\r\n                    <h2>{this.state.errors.password}</h2>\r\n                    </div>:\r\n                    <div><h2>Registration has been received</h2>\r\n                    <Nav.Link href=\"/login\"><h3>Please login</h3></Nav.Link>\r\n                    </div>}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Register extends React.Component {\r\n\r\n\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPage: \"Register\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <TopNavBar data={this.state} />\r\n                <AddUserComponent data={this.state} />\r\n                <Footer />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Register />,\r\n    document.getElementById('root')\r\n);\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}